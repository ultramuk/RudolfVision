// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: mediapipe/framework/calculator.proto
// Protobuf C++ Version: 5.29.5

#include "mediapipe/framework/calculator.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace mediapipe {

inline constexpr ProfilerConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : trace_event_types_disabled_{},
        _trace_event_types_disabled_cached_byte_size_{0},
        trace_log_path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        calculator_filter_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        histogram_interval_size_usec_{::int64_t{0}},
        num_histogram_intervals_{::int64_t{0}},
        enable_input_output_latency_{false},
        enable_profiler_{false},
        enable_stream_latency_{false},
        use_packet_timestamp_for_added_packet_{false},
        trace_log_count_{0},
        trace_log_capacity_{::int64_t{0}},
        trace_log_interval_usec_{::int64_t{0}},
        trace_log_margin_usec_{::int64_t{0}},
        trace_log_interval_count_{0},
        trace_log_duration_events_{false},
        trace_log_disabled_{false},
        trace_enabled_{false},
        trace_log_instant_events_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ProfilerConfig::ProfilerConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ProfilerConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProfilerConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProfilerConfigDefaultTypeInternal() {}
  union {
    ProfilerConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProfilerConfigDefaultTypeInternal _ProfilerConfig_default_instance_;

inline constexpr InputStreamInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : tag_index_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        back_edge_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR InputStreamInfo::InputStreamInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct InputStreamInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InputStreamInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InputStreamInfoDefaultTypeInternal() {}
  union {
    InputStreamInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InputStreamInfoDefaultTypeInternal _InputStreamInfo_default_instance_;

inline constexpr InputCollection::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : side_packet_name_{},
        external_input_name_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        file_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        input_type_{static_cast< ::mediapipe::InputCollection_InputType >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR InputCollection::InputCollection(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct InputCollectionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InputCollectionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InputCollectionDefaultTypeInternal() {}
  union {
    InputCollection _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InputCollectionDefaultTypeInternal _InputCollection_default_instance_;

inline constexpr GraphRuntimeInfoConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : enable_graph_runtime_info_{false},
        capture_period_msec_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GraphRuntimeInfoConfig::GraphRuntimeInfoConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GraphRuntimeInfoConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GraphRuntimeInfoConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GraphRuntimeInfoConfigDefaultTypeInternal() {}
  union {
    GraphRuntimeInfoConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GraphRuntimeInfoConfigDefaultTypeInternal _GraphRuntimeInfoConfig_default_instance_;

inline constexpr InputCollectionSet::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : input_collection_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR InputCollectionSet::InputCollectionSet(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct InputCollectionSetDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InputCollectionSetDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InputCollectionSetDefaultTypeInternal() {}
  union {
    InputCollectionSet _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InputCollectionSetDefaultTypeInternal _InputCollectionSet_default_instance_;

inline constexpr ExecutorConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        options_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ExecutorConfig::ExecutorConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ExecutorConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExecutorConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExecutorConfigDefaultTypeInternal() {}
  union {
    ExecutorConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExecutorConfigDefaultTypeInternal _ExecutorConfig_default_instance_;

inline constexpr CalculatorGraphConfig_Node::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        input_stream_{},
        output_stream_{},
        input_side_packet_{},
        output_side_packet_{},
        node_options_{},
        input_stream_info_{},
        option_value_{},
        external_input_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        calculator_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        executor_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        options_{nullptr},
        input_stream_handler_{nullptr},
        output_stream_handler_{nullptr},
        profiler_config_{nullptr},
        source_layer_{0},
        buffer_size_hint_{0},
        max_in_flight_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CalculatorGraphConfig_Node::CalculatorGraphConfig_Node(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CalculatorGraphConfig_NodeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CalculatorGraphConfig_NodeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CalculatorGraphConfig_NodeDefaultTypeInternal() {}
  union {
    CalculatorGraphConfig_Node _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CalculatorGraphConfig_NodeDefaultTypeInternal _CalculatorGraphConfig_Node_default_instance_;

inline constexpr CalculatorGraphConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        node_{},
        packet_factory_{},
        packet_generator_{},
        status_handler_{},
        input_stream_{},
        executor_{},
        output_stream_{},
        input_side_packet_{},
        output_side_packet_{},
        graph_options_{},
        package_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        input_stream_handler_{nullptr},
        output_stream_handler_{nullptr},
        profiler_config_{nullptr},
        runtime_info_{nullptr},
        options_{nullptr},
        num_threads_{0},
        max_queue_size_{0},
        report_deadlock_{false} {}

template <typename>
PROTOBUF_CONSTEXPR CalculatorGraphConfig::CalculatorGraphConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CalculatorGraphConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CalculatorGraphConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CalculatorGraphConfigDefaultTypeInternal() {}
  union {
    CalculatorGraphConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CalculatorGraphConfigDefaultTypeInternal _CalculatorGraphConfig_default_instance_;
}  // namespace mediapipe
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_mediapipe_2fframework_2fcalculator_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_mediapipe_2fframework_2fcalculator_2eproto = nullptr;
const ::uint32_t
    TableStruct_mediapipe_2fframework_2fcalculator_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::mediapipe::ExecutorConfig, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::ExecutorConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mediapipe::ExecutorConfig, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::ExecutorConfig, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::ExecutorConfig, _impl_.options_),
        ~0u,
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mediapipe::InputCollection, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mediapipe::InputCollection, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::InputCollection, _impl_.side_packet_name_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::InputCollection, _impl_.external_input_name_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::InputCollection, _impl_.input_type_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::InputCollection, _impl_.file_name_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mediapipe::InputCollectionSet, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mediapipe::InputCollectionSet, _impl_.input_collection_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mediapipe::InputStreamInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mediapipe::InputStreamInfo, _impl_.tag_index_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::InputStreamInfo, _impl_.back_edge_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mediapipe::ProfilerConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mediapipe::ProfilerConfig, _impl_.histogram_interval_size_usec_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::ProfilerConfig, _impl_.num_histogram_intervals_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::ProfilerConfig, _impl_.enable_input_output_latency_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::ProfilerConfig, _impl_.enable_profiler_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::ProfilerConfig, _impl_.enable_stream_latency_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::ProfilerConfig, _impl_.use_packet_timestamp_for_added_packet_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::ProfilerConfig, _impl_.trace_log_capacity_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::ProfilerConfig, _impl_.trace_event_types_disabled_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::ProfilerConfig, _impl_.trace_log_path_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::ProfilerConfig, _impl_.trace_log_count_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::ProfilerConfig, _impl_.trace_log_interval_usec_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::ProfilerConfig, _impl_.trace_log_margin_usec_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::ProfilerConfig, _impl_.trace_log_duration_events_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::ProfilerConfig, _impl_.trace_log_interval_count_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::ProfilerConfig, _impl_.trace_log_disabled_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::ProfilerConfig, _impl_.trace_enabled_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::ProfilerConfig, _impl_.trace_log_instant_events_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::ProfilerConfig, _impl_.calculator_filter_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mediapipe::GraphRuntimeInfoConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mediapipe::GraphRuntimeInfoConfig, _impl_.enable_graph_runtime_info_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::GraphRuntimeInfoConfig, _impl_.capture_period_msec_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::CalculatorGraphConfig_Node, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::CalculatorGraphConfig_Node, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mediapipe::CalculatorGraphConfig_Node, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::CalculatorGraphConfig_Node, _impl_.calculator_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::CalculatorGraphConfig_Node, _impl_.input_stream_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::CalculatorGraphConfig_Node, _impl_.output_stream_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::CalculatorGraphConfig_Node, _impl_.input_side_packet_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::CalculatorGraphConfig_Node, _impl_.output_side_packet_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::CalculatorGraphConfig_Node, _impl_.options_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::CalculatorGraphConfig_Node, _impl_.node_options_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::CalculatorGraphConfig_Node, _impl_.source_layer_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::CalculatorGraphConfig_Node, _impl_.buffer_size_hint_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::CalculatorGraphConfig_Node, _impl_.input_stream_handler_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::CalculatorGraphConfig_Node, _impl_.output_stream_handler_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::CalculatorGraphConfig_Node, _impl_.input_stream_info_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::CalculatorGraphConfig_Node, _impl_.executor_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::CalculatorGraphConfig_Node, _impl_.profiler_config_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::CalculatorGraphConfig_Node, _impl_.max_in_flight_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::CalculatorGraphConfig_Node, _impl_.option_value_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::CalculatorGraphConfig_Node, _impl_.external_input_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,
        1,
        2,
        ~0u,
        ~0u,
        3,
        ~0u,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::mediapipe::CalculatorGraphConfig, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::CalculatorGraphConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mediapipe::CalculatorGraphConfig, _impl_.node_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::CalculatorGraphConfig, _impl_.packet_factory_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::CalculatorGraphConfig, _impl_.packet_generator_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::CalculatorGraphConfig, _impl_.num_threads_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::CalculatorGraphConfig, _impl_.status_handler_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::CalculatorGraphConfig, _impl_.input_stream_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::CalculatorGraphConfig, _impl_.output_stream_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::CalculatorGraphConfig, _impl_.input_side_packet_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::CalculatorGraphConfig, _impl_.output_side_packet_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::CalculatorGraphConfig, _impl_.max_queue_size_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::CalculatorGraphConfig, _impl_.report_deadlock_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::CalculatorGraphConfig, _impl_.runtime_info_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::CalculatorGraphConfig, _impl_.input_stream_handler_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::CalculatorGraphConfig, _impl_.output_stream_handler_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::CalculatorGraphConfig, _impl_.executor_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::CalculatorGraphConfig, _impl_.profiler_config_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::CalculatorGraphConfig, _impl_.package_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::CalculatorGraphConfig, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::CalculatorGraphConfig, _impl_.options_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::CalculatorGraphConfig, _impl_.graph_options_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        3,
        0,
        1,
        ~0u,
        2,
        ~0u,
        ~0u,
        4,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 11, -1, sizeof(::mediapipe::ExecutorConfig)},
        {14, -1, -1, sizeof(::mediapipe::InputCollection)},
        {27, -1, -1, sizeof(::mediapipe::InputCollectionSet)},
        {36, -1, -1, sizeof(::mediapipe::InputStreamInfo)},
        {46, -1, -1, sizeof(::mediapipe::ProfilerConfig)},
        {72, -1, -1, sizeof(::mediapipe::GraphRuntimeInfoConfig)},
        {82, 108, -1, sizeof(::mediapipe::CalculatorGraphConfig_Node)},
        {126, 154, -1, sizeof(::mediapipe::CalculatorGraphConfig)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::mediapipe::_ExecutorConfig_default_instance_._instance,
    &::mediapipe::_InputCollection_default_instance_._instance,
    &::mediapipe::_InputCollectionSet_default_instance_._instance,
    &::mediapipe::_InputStreamInfo_default_instance_._instance,
    &::mediapipe::_ProfilerConfig_default_instance_._instance,
    &::mediapipe::_GraphRuntimeInfoConfig_default_instance_._instance,
    &::mediapipe::_CalculatorGraphConfig_Node_default_instance_._instance,
    &::mediapipe::_CalculatorGraphConfig_default_instance_._instance,
};
const char descriptor_table_protodef_mediapipe_2fframework_2fcalculator_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n$mediapipe/framework/calculator.proto\022\t"
    "mediapipe\032,mediapipe/framework/calculato"
    "r_options.proto\032\031google/protobuf/any.pro"
    "to\032+mediapipe/framework/mediapipe_option"
    "s.proto\032(mediapipe/framework/packet_fact"
    "ory.proto\032*mediapipe/framework/packet_ge"
    "nerator.proto\032(mediapipe/framework/statu"
    "s_handler.proto\032(mediapipe/framework/str"
    "eam_handler.proto\"Z\n\016ExecutorConfig\022\014\n\004n"
    "ame\030\001 \001(\t\022\014\n\004type\030\002 \001(\t\022,\n\007options\030\003 \001(\013"
    "2\033.mediapipe.MediaPipeOptions\"\221\002\n\017InputC"
    "ollection\022\014\n\004name\030\001 \001(\t\022\030\n\020side_packet_n"
    "ame\030\002 \003(\t\022\034\n\023external_input_name\030\352\007 \003(\t\022"
    "8\n\ninput_type\030\003 \001(\0162$.mediapipe.InputCol"
    "lection.InputType\022\021\n\tfile_name\030\004 \001(\t\"k\n\t"
    "InputType\022\013\n\007UNKNOWN\020\000\022\014\n\010RECORDIO\020\001\022\024\n\020"
    "FOREIGN_RECORDIO\020\002\022\024\n\020FOREIGN_CSV_TEXT\020\003"
    "\022\027\n\023INVALID_UPPER_BOUND\020\004\"J\n\022InputCollec"
    "tionSet\0224\n\020input_collection\030\001 \003(\0132\032.medi"
    "apipe.InputCollection\"7\n\017InputStreamInfo"
    "\022\021\n\ttag_index\030\001 \001(\t\022\021\n\tback_edge\030\002 \001(\010\"\321"
    "\004\n\016ProfilerConfig\022$\n\034histogram_interval_"
    "size_usec\030\001 \001(\003\022\037\n\027num_histogram_interva"
    "ls\030\002 \001(\003\022\'\n\033enable_input_output_latency\030"
    "\003 \001(\010B\002\030\001\022\027\n\017enable_profiler\030\004 \001(\010\022\035\n\025en"
    "able_stream_latency\030\005 \001(\010\022-\n%use_packet_"
    "timestamp_for_added_packet\030\006 \001(\010\022\032\n\022trac"
    "e_log_capacity\030\007 \001(\003\022\"\n\032trace_event_type"
    "s_disabled\030\010 \003(\005\022\026\n\016trace_log_path\030\t \001(\t"
    "\022\027\n\017trace_log_count\030\n \001(\005\022\037\n\027trace_log_i"
    "nterval_usec\030\013 \001(\003\022\035\n\025trace_log_margin_u"
    "sec\030\014 \001(\003\022%\n\031trace_log_duration_events\030\r"
    " \001(\010B\002\030\001\022 \n\030trace_log_interval_count\030\016 \001"
    "(\005\022\032\n\022trace_log_disabled\030\017 \001(\010\022\025\n\rtrace_"
    "enabled\030\020 \001(\010\022 \n\030trace_log_instant_event"
    "s\030\021 \001(\010\022\031\n\021calculator_filter\030\022 \001(\t\"X\n\026Gr"
    "aphRuntimeInfoConfig\022!\n\031enable_graph_run"
    "time_info\030\001 \001(\010\022\033\n\023capture_period_msec\030\002"
    " \001(\r\"\255\013\n\025CalculatorGraphConfig\0223\n\004node\030\001"
    " \003(\0132%.mediapipe.CalculatorGraphConfig.N"
    "ode\0226\n\016packet_factory\030\006 \003(\0132\036.mediapipe."
    "PacketFactoryConfig\022>\n\020packet_generator\030"
    "\007 \003(\0132 .mediapipe.PacketGeneratorConfigB"
    "\002\030\001\022\023\n\013num_threads\030\010 \001(\005\0226\n\016status_handl"
    "er\030\t \003(\0132\036.mediapipe.StatusHandlerConfig"
    "\022\024\n\014input_stream\030\n \003(\t\022\025\n\routput_stream\030"
    "\017 \003(\t\022\031\n\021input_side_packet\030\020 \003(\t\022\032\n\022outp"
    "ut_side_packet\030\021 \003(\t\022\026\n\016max_queue_size\030\013"
    " \001(\005\022\027\n\017report_deadlock\030\025 \001(\010\0227\n\014runtime"
    "_info\030\026 \001(\0132!.mediapipe.GraphRuntimeInfo"
    "Config\022A\n\024input_stream_handler\030\014 \001(\0132#.m"
    "ediapipe.InputStreamHandlerConfig\022C\n\025out"
    "put_stream_handler\030\r \001(\0132$.mediapipe.Out"
    "putStreamHandlerConfig\022+\n\010executor\030\016 \003(\013"
    "2\031.mediapipe.ExecutorConfig\0222\n\017profiler_"
    "config\030\022 \001(\0132\031.mediapipe.ProfilerConfig\022"
    "\017\n\007package\030\023 \001(\t\022\014\n\004type\030\024 \001(\t\022-\n\007option"
    "s\030\351\007 \001(\0132\033.mediapipe.MediaPipeOptions\022,\n"
    "\rgraph_options\030\352\007 \003(\0132\024.google.protobuf."
    "Any\032\346\004\n\004Node\022\014\n\004name\030\001 \001(\t\022\022\n\ncalculator"
    "\030\002 \001(\t\022\024\n\014input_stream\030\003 \003(\t\022\025\n\routput_s"
    "tream\030\004 \003(\t\022\031\n\021input_side_packet\030\005 \003(\t\022\032"
    "\n\022output_side_packet\030\006 \003(\t\022-\n\007options\030\007 "
    "\001(\0132\034.mediapipe.CalculatorOptions\022*\n\014nod"
    "e_options\030\010 \003(\0132\024.google.protobuf.Any\022\024\n"
    "\014source_layer\030\t \001(\005\022\030\n\020buffer_size_hint\030"
    "\n \001(\005\022A\n\024input_stream_handler\030\013 \001(\0132#.me"
    "diapipe.InputStreamHandlerConfig\022C\n\025outp"
    "ut_stream_handler\030\014 \001(\0132$.mediapipe.Outp"
    "utStreamHandlerConfig\0225\n\021input_stream_in"
    "fo\030\r \003(\0132\032.mediapipe.InputStreamInfo\022\020\n\010"
    "executor\030\016 \001(\t\0226\n\017profiler_config\030\017 \001(\0132"
    "\031.mediapipe.ProfilerConfigB\002\030\001\022\025\n\rmax_in"
    "_flight\030\020 \001(\005\022\024\n\014option_value\030\021 \003(\t\022\027\n\016e"
    "xternal_input\030\355\007 \003(\tB-\n\032com.google.media"
    "pipe.protoB\017CalculatorProtoP\000b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_mediapipe_2fframework_2fcalculator_2eproto_deps[7] =
    {
        &::descriptor_table_google_2fprotobuf_2fany_2eproto,
        &::descriptor_table_mediapipe_2fframework_2fcalculator_5foptions_2eproto,
        &::descriptor_table_mediapipe_2fframework_2fmediapipe_5foptions_2eproto,
        &::descriptor_table_mediapipe_2fframework_2fpacket_5ffactory_2eproto,
        &::descriptor_table_mediapipe_2fframework_2fpacket_5fgenerator_2eproto,
        &::descriptor_table_mediapipe_2fframework_2fstatus_5fhandler_2eproto,
        &::descriptor_table_mediapipe_2fframework_2fstream_5fhandler_2eproto,
};
static ::absl::once_flag descriptor_table_mediapipe_2fframework_2fcalculator_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_mediapipe_2fframework_2fcalculator_2eproto = {
    false,
    false,
    3037,
    descriptor_table_protodef_mediapipe_2fframework_2fcalculator_2eproto,
    "mediapipe/framework/calculator.proto",
    &descriptor_table_mediapipe_2fframework_2fcalculator_2eproto_once,
    descriptor_table_mediapipe_2fframework_2fcalculator_2eproto_deps,
    7,
    8,
    schemas,
    file_default_instances,
    TableStruct_mediapipe_2fframework_2fcalculator_2eproto::offsets,
    file_level_enum_descriptors_mediapipe_2fframework_2fcalculator_2eproto,
    file_level_service_descriptors_mediapipe_2fframework_2fcalculator_2eproto,
};
namespace mediapipe {
const ::google::protobuf::EnumDescriptor* InputCollection_InputType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_mediapipe_2fframework_2fcalculator_2eproto);
  return file_level_enum_descriptors_mediapipe_2fframework_2fcalculator_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t InputCollection_InputType_internal_data_[] = {
    327680u, 0u, };
bool InputCollection_InputType_IsValid(int value) {
  return 0 <= value && value <= 4;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr InputCollection_InputType InputCollection::UNKNOWN;
constexpr InputCollection_InputType InputCollection::RECORDIO;
constexpr InputCollection_InputType InputCollection::FOREIGN_RECORDIO;
constexpr InputCollection_InputType InputCollection::FOREIGN_CSV_TEXT;
constexpr InputCollection_InputType InputCollection::INVALID_UPPER_BOUND;
constexpr InputCollection_InputType InputCollection::InputType_MIN;
constexpr InputCollection_InputType InputCollection::InputType_MAX;
constexpr int InputCollection::InputType_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class ExecutorConfig::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ExecutorConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ExecutorConfig, _impl_._has_bits_);
};

void ExecutorConfig::clear_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.options_ != nullptr) _impl_.options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ExecutorConfig::ExecutorConfig(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mediapipe.ExecutorConfig)
}
inline PROTOBUF_NDEBUG_INLINE ExecutorConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mediapipe::ExecutorConfig& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        name_(arena, from.name_),
        type_(arena, from.type_) {}

ExecutorConfig::ExecutorConfig(
    ::google::protobuf::Arena* arena,
    const ExecutorConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ExecutorConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.options_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mediapipe::MediaPipeOptions>(
                              arena, *from._impl_.options_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mediapipe.ExecutorConfig)
}
inline PROTOBUF_NDEBUG_INLINE ExecutorConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        name_(arena),
        type_(arena) {}

inline void ExecutorConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.options_ = {};
}
ExecutorConfig::~ExecutorConfig() {
  // @@protoc_insertion_point(destructor:mediapipe.ExecutorConfig)
  SharedDtor(*this);
}
inline void ExecutorConfig::SharedDtor(MessageLite& self) {
  ExecutorConfig& this_ = static_cast<ExecutorConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.type_.Destroy();
  delete this_._impl_.options_;
  this_._impl_.~Impl_();
}

inline void* ExecutorConfig::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ExecutorConfig(arena);
}
constexpr auto ExecutorConfig::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ExecutorConfig),
                                            alignof(ExecutorConfig));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ExecutorConfig::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ExecutorConfig_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        ExecutorConfig::IsInitializedImpl,
        &ExecutorConfig::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ExecutorConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ExecutorConfig::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ExecutorConfig>(), &ExecutorConfig::ByteSizeLong,
            &ExecutorConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ExecutorConfig, _impl_._cached_size_),
        false,
    },
    &ExecutorConfig::kDescriptorMethods,
    &descriptor_table_mediapipe_2fframework_2fcalculator_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ExecutorConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 41, 2> ExecutorConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ExecutorConfig, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mediapipe::ExecutorConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ExecutorConfig, _impl_.name_)}},
    // string type = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ExecutorConfig, _impl_.type_)}},
    // .mediapipe.MediaPipeOptions options = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(ExecutorConfig, _impl_.options_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(ExecutorConfig, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string type = 2;
    {PROTOBUF_FIELD_OFFSET(ExecutorConfig, _impl_.type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .mediapipe.MediaPipeOptions options = 3;
    {PROTOBUF_FIELD_OFFSET(ExecutorConfig, _impl_.options_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mediapipe::MediaPipeOptions>()},
  }}, {{
    "\30\4\4\0\0\0\0\0"
    "mediapipe.ExecutorConfig"
    "name"
    "type"
  }},
};

PROTOBUF_NOINLINE void ExecutorConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:mediapipe.ExecutorConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.type_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.options_ != nullptr);
    _impl_.options_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ExecutorConfig::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ExecutorConfig& this_ = static_cast<const ExecutorConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ExecutorConfig::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ExecutorConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mediapipe.ExecutorConfig)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string name = 1;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mediapipe.ExecutorConfig.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string type = 2;
          if (!this_._internal_type().empty()) {
            const std::string& _s = this_._internal_type();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mediapipe.ExecutorConfig.type");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mediapipe.MediaPipeOptions options = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.options_, this_._impl_.options_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mediapipe.ExecutorConfig)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ExecutorConfig::ByteSizeLong(const MessageLite& base) {
          const ExecutorConfig& this_ = static_cast<const ExecutorConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ExecutorConfig::ByteSizeLong() const {
          const ExecutorConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mediapipe.ExecutorConfig)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string name = 1;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // string type = 2;
            if (!this_._internal_type().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_type());
            }
          }
           {
            // .mediapipe.MediaPipeOptions options = 3;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.options_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ExecutorConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ExecutorConfig*>(&to_msg);
  auto& from = static_cast<const ExecutorConfig&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mediapipe.ExecutorConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_type().empty()) {
    _this->_internal_set_type(from._internal_type());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.options_ != nullptr);
    if (_this->_impl_.options_ == nullptr) {
      _this->_impl_.options_ =
          ::google::protobuf::Message::CopyConstruct<::mediapipe::MediaPipeOptions>(arena, *from._impl_.options_);
    } else {
      _this->_impl_.options_->MergeFrom(*from._impl_.options_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ExecutorConfig::CopyFrom(const ExecutorConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mediapipe.ExecutorConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ExecutorConfig::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const ExecutorConfig&>(msg);
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._impl_.options_->IsInitialized()) return false;
  }
  return true;
}

void ExecutorConfig::InternalSwap(ExecutorConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.type_, &other->_impl_.type_, arena);
  swap(_impl_.options_, other->_impl_.options_);
}

::google::protobuf::Metadata ExecutorConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class InputCollection::_Internal {
 public:
};

InputCollection::InputCollection(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mediapipe.InputCollection)
}
inline PROTOBUF_NDEBUG_INLINE InputCollection::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mediapipe::InputCollection& from_msg)
      : side_packet_name_{visibility, arena, from.side_packet_name_},
        external_input_name_{visibility, arena, from.external_input_name_},
        name_(arena, from.name_),
        file_name_(arena, from.file_name_),
        _cached_size_{0} {}

InputCollection::InputCollection(
    ::google::protobuf::Arena* arena,
    const InputCollection& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  InputCollection* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.input_type_ = from._impl_.input_type_;

  // @@protoc_insertion_point(copy_constructor:mediapipe.InputCollection)
}
inline PROTOBUF_NDEBUG_INLINE InputCollection::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : side_packet_name_{visibility, arena},
        external_input_name_{visibility, arena},
        name_(arena),
        file_name_(arena),
        _cached_size_{0} {}

inline void InputCollection::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.input_type_ = {};
}
InputCollection::~InputCollection() {
  // @@protoc_insertion_point(destructor:mediapipe.InputCollection)
  SharedDtor(*this);
}
inline void InputCollection::SharedDtor(MessageLite& self) {
  InputCollection& this_ = static_cast<InputCollection&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.file_name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* InputCollection::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) InputCollection(arena);
}
constexpr auto InputCollection::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(InputCollection, _impl_.side_packet_name_) +
          decltype(InputCollection::_impl_.side_packet_name_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(InputCollection, _impl_.external_input_name_) +
          decltype(InputCollection::_impl_.external_input_name_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(InputCollection), alignof(InputCollection), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&InputCollection::PlacementNew_,
                                 sizeof(InputCollection),
                                 alignof(InputCollection));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull InputCollection::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_InputCollection_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &InputCollection::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<InputCollection>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &InputCollection::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<InputCollection>(), &InputCollection::ByteSizeLong,
            &InputCollection::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(InputCollection, _impl_._cached_size_),
        false,
    },
    &InputCollection::kDescriptorMethods,
    &descriptor_table_mediapipe_2fframework_2fcalculator_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* InputCollection::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 5, 0, 82, 7> InputCollection::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1002, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mediapipe::InputCollection>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string file_name = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(InputCollection, _impl_.file_name_)}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(InputCollection, _impl_.name_)}},
    // repeated string side_packet_name = 2;
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(InputCollection, _impl_.side_packet_name_)}},
    // .mediapipe.InputCollection.InputType input_type = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(InputCollection, _impl_.input_type_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(InputCollection, _impl_.input_type_)}},
  }}, {{
    1002, 0, 1,
    65534, 4,
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(InputCollection, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string side_packet_name = 2;
    {PROTOBUF_FIELD_OFFSET(InputCollection, _impl_.side_packet_name_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // .mediapipe.InputCollection.InputType input_type = 3;
    {PROTOBUF_FIELD_OFFSET(InputCollection, _impl_.input_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string file_name = 4;
    {PROTOBUF_FIELD_OFFSET(InputCollection, _impl_.file_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string external_input_name = 1002;
    {PROTOBUF_FIELD_OFFSET(InputCollection, _impl_.external_input_name_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\31\4\20\0\11\23\0\0"
    "mediapipe.InputCollection"
    "name"
    "side_packet_name"
    "file_name"
    "external_input_name"
  }},
};

PROTOBUF_NOINLINE void InputCollection::Clear() {
// @@protoc_insertion_point(message_clear_start:mediapipe.InputCollection)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.side_packet_name_.Clear();
  _impl_.external_input_name_.Clear();
  _impl_.name_.ClearToEmpty();
  _impl_.file_name_.ClearToEmpty();
  _impl_.input_type_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* InputCollection::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const InputCollection& this_ = static_cast<const InputCollection&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* InputCollection::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const InputCollection& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mediapipe.InputCollection)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string name = 1;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mediapipe.InputCollection.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // repeated string side_packet_name = 2;
          for (int i = 0, n = this_._internal_side_packet_name_size(); i < n; ++i) {
            const auto& s = this_._internal_side_packet_name().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mediapipe.InputCollection.side_packet_name");
            target = stream->WriteString(2, s, target);
          }

          // .mediapipe.InputCollection.InputType input_type = 3;
          if (this_._internal_input_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                3, this_._internal_input_type(), target);
          }

          // string file_name = 4;
          if (!this_._internal_file_name().empty()) {
            const std::string& _s = this_._internal_file_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mediapipe.InputCollection.file_name");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // repeated string external_input_name = 1002;
          for (int i = 0, n = this_._internal_external_input_name_size(); i < n; ++i) {
            const auto& s = this_._internal_external_input_name().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mediapipe.InputCollection.external_input_name");
            target = stream->WriteString(1002, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mediapipe.InputCollection)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t InputCollection::ByteSizeLong(const MessageLite& base) {
          const InputCollection& this_ = static_cast<const InputCollection&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t InputCollection::ByteSizeLong() const {
          const InputCollection& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mediapipe.InputCollection)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string side_packet_name = 2;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_side_packet_name().size());
              for (int i = 0, n = this_._internal_side_packet_name().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_side_packet_name().Get(i));
              }
            }
            // repeated string external_input_name = 1002;
            {
              total_size +=
                  2 * ::google::protobuf::internal::FromIntSize(this_._internal_external_input_name().size());
              for (int i = 0, n = this_._internal_external_input_name().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_external_input_name().Get(i));
              }
            }
          }
           {
            // string name = 1;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // string file_name = 4;
            if (!this_._internal_file_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_file_name());
            }
            // .mediapipe.InputCollection.InputType input_type = 3;
            if (this_._internal_input_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_input_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void InputCollection::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<InputCollection*>(&to_msg);
  auto& from = static_cast<const InputCollection&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mediapipe.InputCollection)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_side_packet_name()->MergeFrom(from._internal_side_packet_name());
  _this->_internal_mutable_external_input_name()->MergeFrom(from._internal_external_input_name());
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_file_name().empty()) {
    _this->_internal_set_file_name(from._internal_file_name());
  }
  if (from._internal_input_type() != 0) {
    _this->_impl_.input_type_ = from._impl_.input_type_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InputCollection::CopyFrom(const InputCollection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mediapipe.InputCollection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void InputCollection::InternalSwap(InputCollection* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.side_packet_name_.InternalSwap(&other->_impl_.side_packet_name_);
  _impl_.external_input_name_.InternalSwap(&other->_impl_.external_input_name_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.file_name_, &other->_impl_.file_name_, arena);
  swap(_impl_.input_type_, other->_impl_.input_type_);
}

::google::protobuf::Metadata InputCollection::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class InputCollectionSet::_Internal {
 public:
};

InputCollectionSet::InputCollectionSet(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mediapipe.InputCollectionSet)
}
inline PROTOBUF_NDEBUG_INLINE InputCollectionSet::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mediapipe::InputCollectionSet& from_msg)
      : input_collection_{visibility, arena, from.input_collection_},
        _cached_size_{0} {}

InputCollectionSet::InputCollectionSet(
    ::google::protobuf::Arena* arena,
    const InputCollectionSet& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  InputCollectionSet* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:mediapipe.InputCollectionSet)
}
inline PROTOBUF_NDEBUG_INLINE InputCollectionSet::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : input_collection_{visibility, arena},
        _cached_size_{0} {}

inline void InputCollectionSet::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
InputCollectionSet::~InputCollectionSet() {
  // @@protoc_insertion_point(destructor:mediapipe.InputCollectionSet)
  SharedDtor(*this);
}
inline void InputCollectionSet::SharedDtor(MessageLite& self) {
  InputCollectionSet& this_ = static_cast<InputCollectionSet&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* InputCollectionSet::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) InputCollectionSet(arena);
}
constexpr auto InputCollectionSet::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(InputCollectionSet, _impl_.input_collection_) +
          decltype(InputCollectionSet::_impl_.input_collection_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(InputCollectionSet), alignof(InputCollectionSet), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&InputCollectionSet::PlacementNew_,
                                 sizeof(InputCollectionSet),
                                 alignof(InputCollectionSet));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull InputCollectionSet::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_InputCollectionSet_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &InputCollectionSet::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<InputCollectionSet>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &InputCollectionSet::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<InputCollectionSet>(), &InputCollectionSet::ByteSizeLong,
            &InputCollectionSet::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(InputCollectionSet, _impl_._cached_size_),
        false,
    },
    &InputCollectionSet::kDescriptorMethods,
    &descriptor_table_mediapipe_2fframework_2fcalculator_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* InputCollectionSet::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> InputCollectionSet::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mediapipe::InputCollectionSet>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .mediapipe.InputCollection input_collection = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(InputCollectionSet, _impl_.input_collection_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .mediapipe.InputCollection input_collection = 1;
    {PROTOBUF_FIELD_OFFSET(InputCollectionSet, _impl_.input_collection_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mediapipe::InputCollection>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void InputCollectionSet::Clear() {
// @@protoc_insertion_point(message_clear_start:mediapipe.InputCollectionSet)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.input_collection_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* InputCollectionSet::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const InputCollectionSet& this_ = static_cast<const InputCollectionSet&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* InputCollectionSet::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const InputCollectionSet& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mediapipe.InputCollectionSet)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .mediapipe.InputCollection input_collection = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_input_collection_size());
               i < n; i++) {
            const auto& repfield = this_._internal_input_collection().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mediapipe.InputCollectionSet)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t InputCollectionSet::ByteSizeLong(const MessageLite& base) {
          const InputCollectionSet& this_ = static_cast<const InputCollectionSet&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t InputCollectionSet::ByteSizeLong() const {
          const InputCollectionSet& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mediapipe.InputCollectionSet)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .mediapipe.InputCollection input_collection = 1;
            {
              total_size += 1UL * this_._internal_input_collection_size();
              for (const auto& msg : this_._internal_input_collection()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void InputCollectionSet::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<InputCollectionSet*>(&to_msg);
  auto& from = static_cast<const InputCollectionSet&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mediapipe.InputCollectionSet)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_input_collection()->MergeFrom(
      from._internal_input_collection());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InputCollectionSet::CopyFrom(const InputCollectionSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mediapipe.InputCollectionSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void InputCollectionSet::InternalSwap(InputCollectionSet* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.input_collection_.InternalSwap(&other->_impl_.input_collection_);
}

::google::protobuf::Metadata InputCollectionSet::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class InputStreamInfo::_Internal {
 public:
};

InputStreamInfo::InputStreamInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mediapipe.InputStreamInfo)
}
inline PROTOBUF_NDEBUG_INLINE InputStreamInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mediapipe::InputStreamInfo& from_msg)
      : tag_index_(arena, from.tag_index_),
        _cached_size_{0} {}

InputStreamInfo::InputStreamInfo(
    ::google::protobuf::Arena* arena,
    const InputStreamInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  InputStreamInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.back_edge_ = from._impl_.back_edge_;

  // @@protoc_insertion_point(copy_constructor:mediapipe.InputStreamInfo)
}
inline PROTOBUF_NDEBUG_INLINE InputStreamInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : tag_index_(arena),
        _cached_size_{0} {}

inline void InputStreamInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.back_edge_ = {};
}
InputStreamInfo::~InputStreamInfo() {
  // @@protoc_insertion_point(destructor:mediapipe.InputStreamInfo)
  SharedDtor(*this);
}
inline void InputStreamInfo::SharedDtor(MessageLite& self) {
  InputStreamInfo& this_ = static_cast<InputStreamInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.tag_index_.Destroy();
  this_._impl_.~Impl_();
}

inline void* InputStreamInfo::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) InputStreamInfo(arena);
}
constexpr auto InputStreamInfo::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(InputStreamInfo),
                                            alignof(InputStreamInfo));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull InputStreamInfo::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_InputStreamInfo_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &InputStreamInfo::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<InputStreamInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &InputStreamInfo::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<InputStreamInfo>(), &InputStreamInfo::ByteSizeLong,
            &InputStreamInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(InputStreamInfo, _impl_._cached_size_),
        false,
    },
    &InputStreamInfo::kDescriptorMethods,
    &descriptor_table_mediapipe_2fframework_2fcalculator_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* InputStreamInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 43, 2> InputStreamInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mediapipe::InputStreamInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool back_edge = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(InputStreamInfo, _impl_.back_edge_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(InputStreamInfo, _impl_.back_edge_)}},
    // string tag_index = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(InputStreamInfo, _impl_.tag_index_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string tag_index = 1;
    {PROTOBUF_FIELD_OFFSET(InputStreamInfo, _impl_.tag_index_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool back_edge = 2;
    {PROTOBUF_FIELD_OFFSET(InputStreamInfo, _impl_.back_edge_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\31\11\0\0\0\0\0\0"
    "mediapipe.InputStreamInfo"
    "tag_index"
  }},
};

PROTOBUF_NOINLINE void InputStreamInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:mediapipe.InputStreamInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tag_index_.ClearToEmpty();
  _impl_.back_edge_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* InputStreamInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const InputStreamInfo& this_ = static_cast<const InputStreamInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* InputStreamInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const InputStreamInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mediapipe.InputStreamInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string tag_index = 1;
          if (!this_._internal_tag_index().empty()) {
            const std::string& _s = this_._internal_tag_index();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mediapipe.InputStreamInfo.tag_index");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // bool back_edge = 2;
          if (this_._internal_back_edge() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                2, this_._internal_back_edge(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mediapipe.InputStreamInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t InputStreamInfo::ByteSizeLong(const MessageLite& base) {
          const InputStreamInfo& this_ = static_cast<const InputStreamInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t InputStreamInfo::ByteSizeLong() const {
          const InputStreamInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mediapipe.InputStreamInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string tag_index = 1;
            if (!this_._internal_tag_index().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_tag_index());
            }
            // bool back_edge = 2;
            if (this_._internal_back_edge() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void InputStreamInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<InputStreamInfo*>(&to_msg);
  auto& from = static_cast<const InputStreamInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mediapipe.InputStreamInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_tag_index().empty()) {
    _this->_internal_set_tag_index(from._internal_tag_index());
  }
  if (from._internal_back_edge() != 0) {
    _this->_impl_.back_edge_ = from._impl_.back_edge_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InputStreamInfo::CopyFrom(const InputStreamInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mediapipe.InputStreamInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void InputStreamInfo::InternalSwap(InputStreamInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.tag_index_, &other->_impl_.tag_index_, arena);
        swap(_impl_.back_edge_, other->_impl_.back_edge_);
}

::google::protobuf::Metadata InputStreamInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ProfilerConfig::_Internal {
 public:
};

ProfilerConfig::ProfilerConfig(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mediapipe.ProfilerConfig)
}
inline PROTOBUF_NDEBUG_INLINE ProfilerConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mediapipe::ProfilerConfig& from_msg)
      : trace_event_types_disabled_{visibility, arena, from.trace_event_types_disabled_},
        _trace_event_types_disabled_cached_byte_size_{0},
        trace_log_path_(arena, from.trace_log_path_),
        calculator_filter_(arena, from.calculator_filter_),
        _cached_size_{0} {}

ProfilerConfig::ProfilerConfig(
    ::google::protobuf::Arena* arena,
    const ProfilerConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ProfilerConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, histogram_interval_size_usec_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, histogram_interval_size_usec_),
           offsetof(Impl_, trace_log_instant_events_) -
               offsetof(Impl_, histogram_interval_size_usec_) +
               sizeof(Impl_::trace_log_instant_events_));

  // @@protoc_insertion_point(copy_constructor:mediapipe.ProfilerConfig)
}
inline PROTOBUF_NDEBUG_INLINE ProfilerConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : trace_event_types_disabled_{visibility, arena},
        _trace_event_types_disabled_cached_byte_size_{0},
        trace_log_path_(arena),
        calculator_filter_(arena),
        _cached_size_{0} {}

inline void ProfilerConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, histogram_interval_size_usec_),
           0,
           offsetof(Impl_, trace_log_instant_events_) -
               offsetof(Impl_, histogram_interval_size_usec_) +
               sizeof(Impl_::trace_log_instant_events_));
}
ProfilerConfig::~ProfilerConfig() {
  // @@protoc_insertion_point(destructor:mediapipe.ProfilerConfig)
  SharedDtor(*this);
}
inline void ProfilerConfig::SharedDtor(MessageLite& self) {
  ProfilerConfig& this_ = static_cast<ProfilerConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.trace_log_path_.Destroy();
  this_._impl_.calculator_filter_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ProfilerConfig::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ProfilerConfig(arena);
}
constexpr auto ProfilerConfig::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ProfilerConfig, _impl_.trace_event_types_disabled_) +
          decltype(ProfilerConfig::_impl_.trace_event_types_disabled_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ProfilerConfig), alignof(ProfilerConfig), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ProfilerConfig::PlacementNew_,
                                 sizeof(ProfilerConfig),
                                 alignof(ProfilerConfig));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ProfilerConfig::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ProfilerConfig_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ProfilerConfig::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ProfilerConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ProfilerConfig::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ProfilerConfig>(), &ProfilerConfig::ByteSizeLong,
            &ProfilerConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ProfilerConfig, _impl_._cached_size_),
        false,
    },
    &ProfilerConfig::kDescriptorMethods,
    &descriptor_table_mediapipe_2fframework_2fcalculator_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ProfilerConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 18, 0, 80, 2> ProfilerConfig::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    18, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294705152,  // skipmap
    offsetof(decltype(_table_), field_entries),
    18,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mediapipe::ProfilerConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int64 histogram_interval_size_usec = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ProfilerConfig, _impl_.histogram_interval_size_usec_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ProfilerConfig, _impl_.histogram_interval_size_usec_)}},
    // int64 num_histogram_intervals = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ProfilerConfig, _impl_.num_histogram_intervals_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ProfilerConfig, _impl_.num_histogram_intervals_)}},
    // bool enable_input_output_latency = 3 [deprecated = true];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ProfilerConfig, _impl_.enable_input_output_latency_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(ProfilerConfig, _impl_.enable_input_output_latency_)}},
    // bool enable_profiler = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ProfilerConfig, _impl_.enable_profiler_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(ProfilerConfig, _impl_.enable_profiler_)}},
    // bool enable_stream_latency = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ProfilerConfig, _impl_.enable_stream_latency_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(ProfilerConfig, _impl_.enable_stream_latency_)}},
    // bool use_packet_timestamp_for_added_packet = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ProfilerConfig, _impl_.use_packet_timestamp_for_added_packet_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(ProfilerConfig, _impl_.use_packet_timestamp_for_added_packet_)}},
    // int64 trace_log_capacity = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ProfilerConfig, _impl_.trace_log_capacity_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(ProfilerConfig, _impl_.trace_log_capacity_)}},
    // repeated int32 trace_event_types_disabled = 8;
    {::_pbi::TcParser::FastV32P1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(ProfilerConfig, _impl_.trace_event_types_disabled_)}},
    // string trace_log_path = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(ProfilerConfig, _impl_.trace_log_path_)}},
    // int32 trace_log_count = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ProfilerConfig, _impl_.trace_log_count_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(ProfilerConfig, _impl_.trace_log_count_)}},
    // int64 trace_log_interval_usec = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ProfilerConfig, _impl_.trace_log_interval_usec_), 63>(),
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(ProfilerConfig, _impl_.trace_log_interval_usec_)}},
    // int64 trace_log_margin_usec = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ProfilerConfig, _impl_.trace_log_margin_usec_), 63>(),
     {96, 63, 0, PROTOBUF_FIELD_OFFSET(ProfilerConfig, _impl_.trace_log_margin_usec_)}},
    // bool trace_log_duration_events = 13 [deprecated = true];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ProfilerConfig, _impl_.trace_log_duration_events_), 63>(),
     {104, 63, 0, PROTOBUF_FIELD_OFFSET(ProfilerConfig, _impl_.trace_log_duration_events_)}},
    // int32 trace_log_interval_count = 14;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ProfilerConfig, _impl_.trace_log_interval_count_), 63>(),
     {112, 63, 0, PROTOBUF_FIELD_OFFSET(ProfilerConfig, _impl_.trace_log_interval_count_)}},
    // bool trace_log_disabled = 15;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ProfilerConfig, _impl_.trace_log_disabled_), 63>(),
     {120, 63, 0, PROTOBUF_FIELD_OFFSET(ProfilerConfig, _impl_.trace_log_disabled_)}},
    // bool trace_enabled = 16;
    {::_pbi::TcParser::FastV8S2,
     {384, 63, 0, PROTOBUF_FIELD_OFFSET(ProfilerConfig, _impl_.trace_enabled_)}},
    // bool trace_log_instant_events = 17;
    {::_pbi::TcParser::FastV8S2,
     {392, 63, 0, PROTOBUF_FIELD_OFFSET(ProfilerConfig, _impl_.trace_log_instant_events_)}},
    // string calculator_filter = 18;
    {::_pbi::TcParser::FastUS2,
     {402, 63, 0, PROTOBUF_FIELD_OFFSET(ProfilerConfig, _impl_.calculator_filter_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 histogram_interval_size_usec = 1;
    {PROTOBUF_FIELD_OFFSET(ProfilerConfig, _impl_.histogram_interval_size_usec_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 num_histogram_intervals = 2;
    {PROTOBUF_FIELD_OFFSET(ProfilerConfig, _impl_.num_histogram_intervals_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // bool enable_input_output_latency = 3 [deprecated = true];
    {PROTOBUF_FIELD_OFFSET(ProfilerConfig, _impl_.enable_input_output_latency_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool enable_profiler = 4;
    {PROTOBUF_FIELD_OFFSET(ProfilerConfig, _impl_.enable_profiler_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool enable_stream_latency = 5;
    {PROTOBUF_FIELD_OFFSET(ProfilerConfig, _impl_.enable_stream_latency_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool use_packet_timestamp_for_added_packet = 6;
    {PROTOBUF_FIELD_OFFSET(ProfilerConfig, _impl_.use_packet_timestamp_for_added_packet_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // int64 trace_log_capacity = 7;
    {PROTOBUF_FIELD_OFFSET(ProfilerConfig, _impl_.trace_log_capacity_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // repeated int32 trace_event_types_disabled = 8;
    {PROTOBUF_FIELD_OFFSET(ProfilerConfig, _impl_.trace_event_types_disabled_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
    // string trace_log_path = 9;
    {PROTOBUF_FIELD_OFFSET(ProfilerConfig, _impl_.trace_log_path_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 trace_log_count = 10;
    {PROTOBUF_FIELD_OFFSET(ProfilerConfig, _impl_.trace_log_count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int64 trace_log_interval_usec = 11;
    {PROTOBUF_FIELD_OFFSET(ProfilerConfig, _impl_.trace_log_interval_usec_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 trace_log_margin_usec = 12;
    {PROTOBUF_FIELD_OFFSET(ProfilerConfig, _impl_.trace_log_margin_usec_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // bool trace_log_duration_events = 13 [deprecated = true];
    {PROTOBUF_FIELD_OFFSET(ProfilerConfig, _impl_.trace_log_duration_events_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // int32 trace_log_interval_count = 14;
    {PROTOBUF_FIELD_OFFSET(ProfilerConfig, _impl_.trace_log_interval_count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bool trace_log_disabled = 15;
    {PROTOBUF_FIELD_OFFSET(ProfilerConfig, _impl_.trace_log_disabled_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool trace_enabled = 16;
    {PROTOBUF_FIELD_OFFSET(ProfilerConfig, _impl_.trace_enabled_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool trace_log_instant_events = 17;
    {PROTOBUF_FIELD_OFFSET(ProfilerConfig, _impl_.trace_log_instant_events_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string calculator_filter = 18;
    {PROTOBUF_FIELD_OFFSET(ProfilerConfig, _impl_.calculator_filter_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\30\0\0\0\0\0\0\0\0\16\0\0\0\0\0\0\0\0\21\0\0\0\0\0"
    "mediapipe.ProfilerConfig"
    "trace_log_path"
    "calculator_filter"
  }},
};

PROTOBUF_NOINLINE void ProfilerConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:mediapipe.ProfilerConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.trace_event_types_disabled_.Clear();
  _impl_.trace_log_path_.ClearToEmpty();
  _impl_.calculator_filter_.ClearToEmpty();
  ::memset(&_impl_.histogram_interval_size_usec_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.trace_log_instant_events_) -
      reinterpret_cast<char*>(&_impl_.histogram_interval_size_usec_)) + sizeof(_impl_.trace_log_instant_events_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ProfilerConfig::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ProfilerConfig& this_ = static_cast<const ProfilerConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ProfilerConfig::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ProfilerConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mediapipe.ProfilerConfig)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int64 histogram_interval_size_usec = 1;
          if (this_._internal_histogram_interval_size_usec() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<1>(
                    stream, this_._internal_histogram_interval_size_usec(), target);
          }

          // int64 num_histogram_intervals = 2;
          if (this_._internal_num_histogram_intervals() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<2>(
                    stream, this_._internal_num_histogram_intervals(), target);
          }

          // bool enable_input_output_latency = 3 [deprecated = true];
          if (this_._internal_enable_input_output_latency() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                3, this_._internal_enable_input_output_latency(), target);
          }

          // bool enable_profiler = 4;
          if (this_._internal_enable_profiler() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                4, this_._internal_enable_profiler(), target);
          }

          // bool enable_stream_latency = 5;
          if (this_._internal_enable_stream_latency() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                5, this_._internal_enable_stream_latency(), target);
          }

          // bool use_packet_timestamp_for_added_packet = 6;
          if (this_._internal_use_packet_timestamp_for_added_packet() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                6, this_._internal_use_packet_timestamp_for_added_packet(), target);
          }

          // int64 trace_log_capacity = 7;
          if (this_._internal_trace_log_capacity() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<7>(
                    stream, this_._internal_trace_log_capacity(), target);
          }

          // repeated int32 trace_event_types_disabled = 8;
          {
            int byte_size = this_._impl_._trace_event_types_disabled_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteInt32Packed(
                  8, this_._internal_trace_event_types_disabled(), byte_size, target);
            }
          }

          // string trace_log_path = 9;
          if (!this_._internal_trace_log_path().empty()) {
            const std::string& _s = this_._internal_trace_log_path();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mediapipe.ProfilerConfig.trace_log_path");
            target = stream->WriteStringMaybeAliased(9, _s, target);
          }

          // int32 trace_log_count = 10;
          if (this_._internal_trace_log_count() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<10>(
                    stream, this_._internal_trace_log_count(), target);
          }

          // int64 trace_log_interval_usec = 11;
          if (this_._internal_trace_log_interval_usec() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<11>(
                    stream, this_._internal_trace_log_interval_usec(), target);
          }

          // int64 trace_log_margin_usec = 12;
          if (this_._internal_trace_log_margin_usec() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<12>(
                    stream, this_._internal_trace_log_margin_usec(), target);
          }

          // bool trace_log_duration_events = 13 [deprecated = true];
          if (this_._internal_trace_log_duration_events() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                13, this_._internal_trace_log_duration_events(), target);
          }

          // int32 trace_log_interval_count = 14;
          if (this_._internal_trace_log_interval_count() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<14>(
                    stream, this_._internal_trace_log_interval_count(), target);
          }

          // bool trace_log_disabled = 15;
          if (this_._internal_trace_log_disabled() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                15, this_._internal_trace_log_disabled(), target);
          }

          // bool trace_enabled = 16;
          if (this_._internal_trace_enabled() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                16, this_._internal_trace_enabled(), target);
          }

          // bool trace_log_instant_events = 17;
          if (this_._internal_trace_log_instant_events() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                17, this_._internal_trace_log_instant_events(), target);
          }

          // string calculator_filter = 18;
          if (!this_._internal_calculator_filter().empty()) {
            const std::string& _s = this_._internal_calculator_filter();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mediapipe.ProfilerConfig.calculator_filter");
            target = stream->WriteStringMaybeAliased(18, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mediapipe.ProfilerConfig)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ProfilerConfig::ByteSizeLong(const MessageLite& base) {
          const ProfilerConfig& this_ = static_cast<const ProfilerConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ProfilerConfig::ByteSizeLong() const {
          const ProfilerConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mediapipe.ProfilerConfig)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated int32 trace_event_types_disabled = 8;
            {
              total_size +=
                  ::_pbi::WireFormatLite::Int32SizeWithPackedTagSize(
                      this_._internal_trace_event_types_disabled(), 1,
                      this_._impl_._trace_event_types_disabled_cached_byte_size_);
            }
          }
           {
            // string trace_log_path = 9;
            if (!this_._internal_trace_log_path().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_trace_log_path());
            }
            // string calculator_filter = 18;
            if (!this_._internal_calculator_filter().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_calculator_filter());
            }
            // int64 histogram_interval_size_usec = 1;
            if (this_._internal_histogram_interval_size_usec() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_histogram_interval_size_usec());
            }
            // int64 num_histogram_intervals = 2;
            if (this_._internal_num_histogram_intervals() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_num_histogram_intervals());
            }
            // bool enable_input_output_latency = 3 [deprecated = true];
            if (this_._internal_enable_input_output_latency() != 0) {
              total_size += 2;
            }
            // bool enable_profiler = 4;
            if (this_._internal_enable_profiler() != 0) {
              total_size += 2;
            }
            // bool enable_stream_latency = 5;
            if (this_._internal_enable_stream_latency() != 0) {
              total_size += 2;
            }
            // bool use_packet_timestamp_for_added_packet = 6;
            if (this_._internal_use_packet_timestamp_for_added_packet() != 0) {
              total_size += 2;
            }
            // int32 trace_log_count = 10;
            if (this_._internal_trace_log_count() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_trace_log_count());
            }
            // int64 trace_log_capacity = 7;
            if (this_._internal_trace_log_capacity() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_trace_log_capacity());
            }
            // int64 trace_log_interval_usec = 11;
            if (this_._internal_trace_log_interval_usec() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_trace_log_interval_usec());
            }
            // int64 trace_log_margin_usec = 12;
            if (this_._internal_trace_log_margin_usec() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_trace_log_margin_usec());
            }
            // int32 trace_log_interval_count = 14;
            if (this_._internal_trace_log_interval_count() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_trace_log_interval_count());
            }
            // bool trace_log_duration_events = 13 [deprecated = true];
            if (this_._internal_trace_log_duration_events() != 0) {
              total_size += 2;
            }
            // bool trace_log_disabled = 15;
            if (this_._internal_trace_log_disabled() != 0) {
              total_size += 2;
            }
            // bool trace_enabled = 16;
            if (this_._internal_trace_enabled() != 0) {
              total_size += 3;
            }
            // bool trace_log_instant_events = 17;
            if (this_._internal_trace_log_instant_events() != 0) {
              total_size += 3;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ProfilerConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ProfilerConfig*>(&to_msg);
  auto& from = static_cast<const ProfilerConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mediapipe.ProfilerConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_trace_event_types_disabled()->MergeFrom(from._internal_trace_event_types_disabled());
  if (!from._internal_trace_log_path().empty()) {
    _this->_internal_set_trace_log_path(from._internal_trace_log_path());
  }
  if (!from._internal_calculator_filter().empty()) {
    _this->_internal_set_calculator_filter(from._internal_calculator_filter());
  }
  if (from._internal_histogram_interval_size_usec() != 0) {
    _this->_impl_.histogram_interval_size_usec_ = from._impl_.histogram_interval_size_usec_;
  }
  if (from._internal_num_histogram_intervals() != 0) {
    _this->_impl_.num_histogram_intervals_ = from._impl_.num_histogram_intervals_;
  }
  if (from._internal_enable_input_output_latency() != 0) {
    _this->_impl_.enable_input_output_latency_ = from._impl_.enable_input_output_latency_;
  }
  if (from._internal_enable_profiler() != 0) {
    _this->_impl_.enable_profiler_ = from._impl_.enable_profiler_;
  }
  if (from._internal_enable_stream_latency() != 0) {
    _this->_impl_.enable_stream_latency_ = from._impl_.enable_stream_latency_;
  }
  if (from._internal_use_packet_timestamp_for_added_packet() != 0) {
    _this->_impl_.use_packet_timestamp_for_added_packet_ = from._impl_.use_packet_timestamp_for_added_packet_;
  }
  if (from._internal_trace_log_count() != 0) {
    _this->_impl_.trace_log_count_ = from._impl_.trace_log_count_;
  }
  if (from._internal_trace_log_capacity() != 0) {
    _this->_impl_.trace_log_capacity_ = from._impl_.trace_log_capacity_;
  }
  if (from._internal_trace_log_interval_usec() != 0) {
    _this->_impl_.trace_log_interval_usec_ = from._impl_.trace_log_interval_usec_;
  }
  if (from._internal_trace_log_margin_usec() != 0) {
    _this->_impl_.trace_log_margin_usec_ = from._impl_.trace_log_margin_usec_;
  }
  if (from._internal_trace_log_interval_count() != 0) {
    _this->_impl_.trace_log_interval_count_ = from._impl_.trace_log_interval_count_;
  }
  if (from._internal_trace_log_duration_events() != 0) {
    _this->_impl_.trace_log_duration_events_ = from._impl_.trace_log_duration_events_;
  }
  if (from._internal_trace_log_disabled() != 0) {
    _this->_impl_.trace_log_disabled_ = from._impl_.trace_log_disabled_;
  }
  if (from._internal_trace_enabled() != 0) {
    _this->_impl_.trace_enabled_ = from._impl_.trace_enabled_;
  }
  if (from._internal_trace_log_instant_events() != 0) {
    _this->_impl_.trace_log_instant_events_ = from._impl_.trace_log_instant_events_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ProfilerConfig::CopyFrom(const ProfilerConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mediapipe.ProfilerConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ProfilerConfig::InternalSwap(ProfilerConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.trace_event_types_disabled_.InternalSwap(&other->_impl_.trace_event_types_disabled_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.trace_log_path_, &other->_impl_.trace_log_path_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.calculator_filter_, &other->_impl_.calculator_filter_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProfilerConfig, _impl_.trace_log_instant_events_)
      + sizeof(ProfilerConfig::_impl_.trace_log_instant_events_)
      - PROTOBUF_FIELD_OFFSET(ProfilerConfig, _impl_.histogram_interval_size_usec_)>(
          reinterpret_cast<char*>(&_impl_.histogram_interval_size_usec_),
          reinterpret_cast<char*>(&other->_impl_.histogram_interval_size_usec_));
}

::google::protobuf::Metadata ProfilerConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GraphRuntimeInfoConfig::_Internal {
 public:
};

GraphRuntimeInfoConfig::GraphRuntimeInfoConfig(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mediapipe.GraphRuntimeInfoConfig)
}
GraphRuntimeInfoConfig::GraphRuntimeInfoConfig(
    ::google::protobuf::Arena* arena, const GraphRuntimeInfoConfig& from)
    : GraphRuntimeInfoConfig(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE GraphRuntimeInfoConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GraphRuntimeInfoConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, enable_graph_runtime_info_),
           0,
           offsetof(Impl_, capture_period_msec_) -
               offsetof(Impl_, enable_graph_runtime_info_) +
               sizeof(Impl_::capture_period_msec_));
}
GraphRuntimeInfoConfig::~GraphRuntimeInfoConfig() {
  // @@protoc_insertion_point(destructor:mediapipe.GraphRuntimeInfoConfig)
  SharedDtor(*this);
}
inline void GraphRuntimeInfoConfig::SharedDtor(MessageLite& self) {
  GraphRuntimeInfoConfig& this_ = static_cast<GraphRuntimeInfoConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* GraphRuntimeInfoConfig::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GraphRuntimeInfoConfig(arena);
}
constexpr auto GraphRuntimeInfoConfig::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GraphRuntimeInfoConfig),
                                            alignof(GraphRuntimeInfoConfig));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GraphRuntimeInfoConfig::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GraphRuntimeInfoConfig_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GraphRuntimeInfoConfig::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GraphRuntimeInfoConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GraphRuntimeInfoConfig::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GraphRuntimeInfoConfig>(), &GraphRuntimeInfoConfig::ByteSizeLong,
            &GraphRuntimeInfoConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GraphRuntimeInfoConfig, _impl_._cached_size_),
        false,
    },
    &GraphRuntimeInfoConfig::kDescriptorMethods,
    &descriptor_table_mediapipe_2fframework_2fcalculator_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GraphRuntimeInfoConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> GraphRuntimeInfoConfig::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mediapipe::GraphRuntimeInfoConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 capture_period_msec = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GraphRuntimeInfoConfig, _impl_.capture_period_msec_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(GraphRuntimeInfoConfig, _impl_.capture_period_msec_)}},
    // bool enable_graph_runtime_info = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(GraphRuntimeInfoConfig, _impl_.enable_graph_runtime_info_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(GraphRuntimeInfoConfig, _impl_.enable_graph_runtime_info_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool enable_graph_runtime_info = 1;
    {PROTOBUF_FIELD_OFFSET(GraphRuntimeInfoConfig, _impl_.enable_graph_runtime_info_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // uint32 capture_period_msec = 2;
    {PROTOBUF_FIELD_OFFSET(GraphRuntimeInfoConfig, _impl_.capture_period_msec_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void GraphRuntimeInfoConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:mediapipe.GraphRuntimeInfoConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.enable_graph_runtime_info_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.capture_period_msec_) -
      reinterpret_cast<char*>(&_impl_.enable_graph_runtime_info_)) + sizeof(_impl_.capture_period_msec_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GraphRuntimeInfoConfig::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GraphRuntimeInfoConfig& this_ = static_cast<const GraphRuntimeInfoConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GraphRuntimeInfoConfig::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GraphRuntimeInfoConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mediapipe.GraphRuntimeInfoConfig)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool enable_graph_runtime_info = 1;
          if (this_._internal_enable_graph_runtime_info() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_enable_graph_runtime_info(), target);
          }

          // uint32 capture_period_msec = 2;
          if (this_._internal_capture_period_msec() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_capture_period_msec(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mediapipe.GraphRuntimeInfoConfig)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GraphRuntimeInfoConfig::ByteSizeLong(const MessageLite& base) {
          const GraphRuntimeInfoConfig& this_ = static_cast<const GraphRuntimeInfoConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GraphRuntimeInfoConfig::ByteSizeLong() const {
          const GraphRuntimeInfoConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mediapipe.GraphRuntimeInfoConfig)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bool enable_graph_runtime_info = 1;
            if (this_._internal_enable_graph_runtime_info() != 0) {
              total_size += 2;
            }
            // uint32 capture_period_msec = 2;
            if (this_._internal_capture_period_msec() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_capture_period_msec());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GraphRuntimeInfoConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GraphRuntimeInfoConfig*>(&to_msg);
  auto& from = static_cast<const GraphRuntimeInfoConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mediapipe.GraphRuntimeInfoConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_enable_graph_runtime_info() != 0) {
    _this->_impl_.enable_graph_runtime_info_ = from._impl_.enable_graph_runtime_info_;
  }
  if (from._internal_capture_period_msec() != 0) {
    _this->_impl_.capture_period_msec_ = from._impl_.capture_period_msec_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GraphRuntimeInfoConfig::CopyFrom(const GraphRuntimeInfoConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mediapipe.GraphRuntimeInfoConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GraphRuntimeInfoConfig::InternalSwap(GraphRuntimeInfoConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GraphRuntimeInfoConfig, _impl_.capture_period_msec_)
      + sizeof(GraphRuntimeInfoConfig::_impl_.capture_period_msec_)
      - PROTOBUF_FIELD_OFFSET(GraphRuntimeInfoConfig, _impl_.enable_graph_runtime_info_)>(
          reinterpret_cast<char*>(&_impl_.enable_graph_runtime_info_),
          reinterpret_cast<char*>(&other->_impl_.enable_graph_runtime_info_));
}

::google::protobuf::Metadata GraphRuntimeInfoConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CalculatorGraphConfig_Node::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CalculatorGraphConfig_Node>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig_Node, _impl_._has_bits_);
};

void CalculatorGraphConfig_Node::clear_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.options_ != nullptr) _impl_.options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void CalculatorGraphConfig_Node::clear_node_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_options_.Clear();
}
void CalculatorGraphConfig_Node::clear_input_stream_handler() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.input_stream_handler_ != nullptr) _impl_.input_stream_handler_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void CalculatorGraphConfig_Node::clear_output_stream_handler() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.output_stream_handler_ != nullptr) _impl_.output_stream_handler_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
CalculatorGraphConfig_Node::CalculatorGraphConfig_Node(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mediapipe.CalculatorGraphConfig.Node)
}
inline PROTOBUF_NDEBUG_INLINE CalculatorGraphConfig_Node::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mediapipe::CalculatorGraphConfig_Node& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        input_stream_{visibility, arena, from.input_stream_},
        output_stream_{visibility, arena, from.output_stream_},
        input_side_packet_{visibility, arena, from.input_side_packet_},
        output_side_packet_{visibility, arena, from.output_side_packet_},
        node_options_{visibility, arena, from.node_options_},
        input_stream_info_{visibility, arena, from.input_stream_info_},
        option_value_{visibility, arena, from.option_value_},
        external_input_{visibility, arena, from.external_input_},
        name_(arena, from.name_),
        calculator_(arena, from.calculator_),
        executor_(arena, from.executor_) {}

CalculatorGraphConfig_Node::CalculatorGraphConfig_Node(
    ::google::protobuf::Arena* arena,
    const CalculatorGraphConfig_Node& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CalculatorGraphConfig_Node* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.options_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mediapipe::CalculatorOptions>(
                              arena, *from._impl_.options_)
                        : nullptr;
  _impl_.input_stream_handler_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::mediapipe::InputStreamHandlerConfig>(
                              arena, *from._impl_.input_stream_handler_)
                        : nullptr;
  _impl_.output_stream_handler_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::mediapipe::OutputStreamHandlerConfig>(
                              arena, *from._impl_.output_stream_handler_)
                        : nullptr;
  _impl_.profiler_config_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::mediapipe::ProfilerConfig>(
                              arena, *from._impl_.profiler_config_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, source_layer_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, source_layer_),
           offsetof(Impl_, max_in_flight_) -
               offsetof(Impl_, source_layer_) +
               sizeof(Impl_::max_in_flight_));

  // @@protoc_insertion_point(copy_constructor:mediapipe.CalculatorGraphConfig.Node)
}
inline PROTOBUF_NDEBUG_INLINE CalculatorGraphConfig_Node::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        input_stream_{visibility, arena},
        output_stream_{visibility, arena},
        input_side_packet_{visibility, arena},
        output_side_packet_{visibility, arena},
        node_options_{visibility, arena},
        input_stream_info_{visibility, arena},
        option_value_{visibility, arena},
        external_input_{visibility, arena},
        name_(arena),
        calculator_(arena),
        executor_(arena) {}

inline void CalculatorGraphConfig_Node::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, options_),
           0,
           offsetof(Impl_, max_in_flight_) -
               offsetof(Impl_, options_) +
               sizeof(Impl_::max_in_flight_));
}
CalculatorGraphConfig_Node::~CalculatorGraphConfig_Node() {
  // @@protoc_insertion_point(destructor:mediapipe.CalculatorGraphConfig.Node)
  SharedDtor(*this);
}
inline void CalculatorGraphConfig_Node::SharedDtor(MessageLite& self) {
  CalculatorGraphConfig_Node& this_ = static_cast<CalculatorGraphConfig_Node&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.calculator_.Destroy();
  this_._impl_.executor_.Destroy();
  delete this_._impl_.options_;
  delete this_._impl_.input_stream_handler_;
  delete this_._impl_.output_stream_handler_;
  delete this_._impl_.profiler_config_;
  this_._impl_.~Impl_();
}

inline void* CalculatorGraphConfig_Node::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CalculatorGraphConfig_Node(arena);
}
constexpr auto CalculatorGraphConfig_Node::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig_Node, _impl_.input_stream_) +
          decltype(CalculatorGraphConfig_Node::_impl_.input_stream_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig_Node, _impl_.output_stream_) +
          decltype(CalculatorGraphConfig_Node::_impl_.output_stream_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig_Node, _impl_.input_side_packet_) +
          decltype(CalculatorGraphConfig_Node::_impl_.input_side_packet_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig_Node, _impl_.output_side_packet_) +
          decltype(CalculatorGraphConfig_Node::_impl_.output_side_packet_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig_Node, _impl_.node_options_) +
          decltype(CalculatorGraphConfig_Node::_impl_.node_options_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig_Node, _impl_.input_stream_info_) +
          decltype(CalculatorGraphConfig_Node::_impl_.input_stream_info_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig_Node, _impl_.option_value_) +
          decltype(CalculatorGraphConfig_Node::_impl_.option_value_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig_Node, _impl_.external_input_) +
          decltype(CalculatorGraphConfig_Node::_impl_.external_input_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(CalculatorGraphConfig_Node), alignof(CalculatorGraphConfig_Node), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CalculatorGraphConfig_Node::PlacementNew_,
                                 sizeof(CalculatorGraphConfig_Node),
                                 alignof(CalculatorGraphConfig_Node));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CalculatorGraphConfig_Node::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CalculatorGraphConfig_Node_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        CalculatorGraphConfig_Node::IsInitializedImpl,
        &CalculatorGraphConfig_Node::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CalculatorGraphConfig_Node>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CalculatorGraphConfig_Node::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CalculatorGraphConfig_Node>(), &CalculatorGraphConfig_Node::ByteSizeLong,
            &CalculatorGraphConfig_Node::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig_Node, _impl_._cached_size_),
        false,
    },
    &CalculatorGraphConfig_Node::kDescriptorMethods,
    &descriptor_table_mediapipe_2fframework_2fcalculator_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CalculatorGraphConfig_Node::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 18, 6, 169, 7> CalculatorGraphConfig_Node::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig_Node, _impl_._has_bits_),
    0, // no _extensions_
    1005, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294836224,  // skipmap
    offsetof(decltype(_table_), field_entries),
    18,  // num_field_entries
    6,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mediapipe::CalculatorGraphConfig_Node>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig_Node, _impl_.name_)}},
    // string calculator = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig_Node, _impl_.calculator_)}},
    // repeated string input_stream = 3;
    {::_pbi::TcParser::FastUR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig_Node, _impl_.input_stream_)}},
    // repeated string output_stream = 4;
    {::_pbi::TcParser::FastUR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig_Node, _impl_.output_stream_)}},
    // repeated string input_side_packet = 5;
    {::_pbi::TcParser::FastUR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig_Node, _impl_.input_side_packet_)}},
    // repeated string output_side_packet = 6;
    {::_pbi::TcParser::FastUR1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig_Node, _impl_.output_side_packet_)}},
    // .mediapipe.CalculatorOptions options = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 0, 0, PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig_Node, _impl_.options_)}},
    // repeated .google.protobuf.Any node_options = 8;
    {::_pbi::TcParser::FastMtR1,
     {66, 63, 1, PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig_Node, _impl_.node_options_)}},
    // int32 source_layer = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CalculatorGraphConfig_Node, _impl_.source_layer_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig_Node, _impl_.source_layer_)}},
    // int32 buffer_size_hint = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CalculatorGraphConfig_Node, _impl_.buffer_size_hint_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig_Node, _impl_.buffer_size_hint_)}},
    // .mediapipe.InputStreamHandlerConfig input_stream_handler = 11;
    {::_pbi::TcParser::FastMtS1,
     {90, 1, 2, PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig_Node, _impl_.input_stream_handler_)}},
    // .mediapipe.OutputStreamHandlerConfig output_stream_handler = 12;
    {::_pbi::TcParser::FastMtS1,
     {98, 2, 3, PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig_Node, _impl_.output_stream_handler_)}},
    // repeated .mediapipe.InputStreamInfo input_stream_info = 13;
    {::_pbi::TcParser::FastMtR1,
     {106, 63, 4, PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig_Node, _impl_.input_stream_info_)}},
    // string executor = 14;
    {::_pbi::TcParser::FastUS1,
     {114, 63, 0, PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig_Node, _impl_.executor_)}},
    // .mediapipe.ProfilerConfig profiler_config = 15 [deprecated = true];
    {::_pbi::TcParser::FastMtS1,
     {122, 3, 5, PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig_Node, _impl_.profiler_config_)}},
    // int32 max_in_flight = 16;
    {::_pbi::TcParser::FastV32S2,
     {384, 63, 0, PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig_Node, _impl_.max_in_flight_)}},
    // repeated string option_value = 17;
    {::_pbi::TcParser::FastUR2,
     {394, 63, 0, PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig_Node, _impl_.option_value_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated string external_input = 1005;
    {::_pbi::TcParser::FastUR2,
     {16106, 63, 0, PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig_Node, _impl_.external_input_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    1005, 0, 1,
    65534, 17,
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig_Node, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string calculator = 2;
    {PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig_Node, _impl_.calculator_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string input_stream = 3;
    {PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig_Node, _impl_.input_stream_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string output_stream = 4;
    {PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig_Node, _impl_.output_stream_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string input_side_packet = 5;
    {PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig_Node, _impl_.input_side_packet_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string output_side_packet = 6;
    {PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig_Node, _impl_.output_side_packet_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // .mediapipe.CalculatorOptions options = 7;
    {PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig_Node, _impl_.options_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .google.protobuf.Any node_options = 8;
    {PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig_Node, _impl_.node_options_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 source_layer = 9;
    {PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig_Node, _impl_.source_layer_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 buffer_size_hint = 10;
    {PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig_Node, _impl_.buffer_size_hint_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .mediapipe.InputStreamHandlerConfig input_stream_handler = 11;
    {PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig_Node, _impl_.input_stream_handler_), _Internal::kHasBitsOffset + 1, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .mediapipe.OutputStreamHandlerConfig output_stream_handler = 12;
    {PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig_Node, _impl_.output_stream_handler_), _Internal::kHasBitsOffset + 2, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .mediapipe.InputStreamInfo input_stream_info = 13;
    {PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig_Node, _impl_.input_stream_info_), -1, 4,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string executor = 14;
    {PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig_Node, _impl_.executor_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .mediapipe.ProfilerConfig profiler_config = 15 [deprecated = true];
    {PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig_Node, _impl_.profiler_config_), _Internal::kHasBitsOffset + 3, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 max_in_flight = 16;
    {PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig_Node, _impl_.max_in_flight_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // repeated string option_value = 17;
    {PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig_Node, _impl_.option_value_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string external_input = 1005;
    {PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig_Node, _impl_.external_input_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mediapipe::CalculatorOptions>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Any>()},
    {::_pbi::TcParser::GetTable<::mediapipe::InputStreamHandlerConfig>()},
    {::_pbi::TcParser::GetTable<::mediapipe::OutputStreamHandlerConfig>()},
    {::_pbi::TcParser::GetTable<::mediapipe::InputStreamInfo>()},
    {::_pbi::TcParser::GetTable<::mediapipe::ProfilerConfig>()},
  }}, {{
    "\44\4\12\14\15\21\22\0\0\0\0\0\0\0\10\0\0\14\16\0\0\0\0\0"
    "mediapipe.CalculatorGraphConfig.Node"
    "name"
    "calculator"
    "input_stream"
    "output_stream"
    "input_side_packet"
    "output_side_packet"
    "executor"
    "option_value"
    "external_input"
  }},
};

PROTOBUF_NOINLINE void CalculatorGraphConfig_Node::Clear() {
// @@protoc_insertion_point(message_clear_start:mediapipe.CalculatorGraphConfig.Node)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.input_stream_.Clear();
  _impl_.output_stream_.Clear();
  _impl_.input_side_packet_.Clear();
  _impl_.output_side_packet_.Clear();
  _impl_.node_options_.Clear();
  _impl_.input_stream_info_.Clear();
  _impl_.option_value_.Clear();
  _impl_.external_input_.Clear();
  _impl_.name_.ClearToEmpty();
  _impl_.calculator_.ClearToEmpty();
  _impl_.executor_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.options_ != nullptr);
      _impl_.options_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.input_stream_handler_ != nullptr);
      _impl_.input_stream_handler_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.output_stream_handler_ != nullptr);
      _impl_.output_stream_handler_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.profiler_config_ != nullptr);
      _impl_.profiler_config_->Clear();
    }
  }
  ::memset(&_impl_.source_layer_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.max_in_flight_) -
      reinterpret_cast<char*>(&_impl_.source_layer_)) + sizeof(_impl_.max_in_flight_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CalculatorGraphConfig_Node::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CalculatorGraphConfig_Node& this_ = static_cast<const CalculatorGraphConfig_Node&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CalculatorGraphConfig_Node::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CalculatorGraphConfig_Node& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mediapipe.CalculatorGraphConfig.Node)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string name = 1;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mediapipe.CalculatorGraphConfig.Node.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string calculator = 2;
          if (!this_._internal_calculator().empty()) {
            const std::string& _s = this_._internal_calculator();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mediapipe.CalculatorGraphConfig.Node.calculator");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // repeated string input_stream = 3;
          for (int i = 0, n = this_._internal_input_stream_size(); i < n; ++i) {
            const auto& s = this_._internal_input_stream().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mediapipe.CalculatorGraphConfig.Node.input_stream");
            target = stream->WriteString(3, s, target);
          }

          // repeated string output_stream = 4;
          for (int i = 0, n = this_._internal_output_stream_size(); i < n; ++i) {
            const auto& s = this_._internal_output_stream().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mediapipe.CalculatorGraphConfig.Node.output_stream");
            target = stream->WriteString(4, s, target);
          }

          // repeated string input_side_packet = 5;
          for (int i = 0, n = this_._internal_input_side_packet_size(); i < n; ++i) {
            const auto& s = this_._internal_input_side_packet().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mediapipe.CalculatorGraphConfig.Node.input_side_packet");
            target = stream->WriteString(5, s, target);
          }

          // repeated string output_side_packet = 6;
          for (int i = 0, n = this_._internal_output_side_packet_size(); i < n; ++i) {
            const auto& s = this_._internal_output_side_packet().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mediapipe.CalculatorGraphConfig.Node.output_side_packet");
            target = stream->WriteString(6, s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mediapipe.CalculatorOptions options = 7;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                7, *this_._impl_.options_, this_._impl_.options_->GetCachedSize(), target,
                stream);
          }

          // repeated .google.protobuf.Any node_options = 8;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_node_options_size());
               i < n; i++) {
            const auto& repfield = this_._internal_node_options().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    8, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // int32 source_layer = 9;
          if (this_._internal_source_layer() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<9>(
                    stream, this_._internal_source_layer(), target);
          }

          // int32 buffer_size_hint = 10;
          if (this_._internal_buffer_size_hint() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<10>(
                    stream, this_._internal_buffer_size_hint(), target);
          }

          // .mediapipe.InputStreamHandlerConfig input_stream_handler = 11;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                11, *this_._impl_.input_stream_handler_, this_._impl_.input_stream_handler_->GetCachedSize(), target,
                stream);
          }

          // .mediapipe.OutputStreamHandlerConfig output_stream_handler = 12;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                12, *this_._impl_.output_stream_handler_, this_._impl_.output_stream_handler_->GetCachedSize(), target,
                stream);
          }

          // repeated .mediapipe.InputStreamInfo input_stream_info = 13;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_input_stream_info_size());
               i < n; i++) {
            const auto& repfield = this_._internal_input_stream_info().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    13, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // string executor = 14;
          if (!this_._internal_executor().empty()) {
            const std::string& _s = this_._internal_executor();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mediapipe.CalculatorGraphConfig.Node.executor");
            target = stream->WriteStringMaybeAliased(14, _s, target);
          }

          // .mediapipe.ProfilerConfig profiler_config = 15 [deprecated = true];
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                15, *this_._impl_.profiler_config_, this_._impl_.profiler_config_->GetCachedSize(), target,
                stream);
          }

          // int32 max_in_flight = 16;
          if (this_._internal_max_in_flight() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt32ToArray(
                16, this_._internal_max_in_flight(), target);
          }

          // repeated string option_value = 17;
          for (int i = 0, n = this_._internal_option_value_size(); i < n; ++i) {
            const auto& s = this_._internal_option_value().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mediapipe.CalculatorGraphConfig.Node.option_value");
            target = stream->WriteString(17, s, target);
          }

          // repeated string external_input = 1005;
          for (int i = 0, n = this_._internal_external_input_size(); i < n; ++i) {
            const auto& s = this_._internal_external_input().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mediapipe.CalculatorGraphConfig.Node.external_input");
            target = stream->WriteString(1005, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mediapipe.CalculatorGraphConfig.Node)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CalculatorGraphConfig_Node::ByteSizeLong(const MessageLite& base) {
          const CalculatorGraphConfig_Node& this_ = static_cast<const CalculatorGraphConfig_Node&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CalculatorGraphConfig_Node::ByteSizeLong() const {
          const CalculatorGraphConfig_Node& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mediapipe.CalculatorGraphConfig.Node)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string input_stream = 3;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_input_stream().size());
              for (int i = 0, n = this_._internal_input_stream().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_input_stream().Get(i));
              }
            }
            // repeated string output_stream = 4;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_output_stream().size());
              for (int i = 0, n = this_._internal_output_stream().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_output_stream().Get(i));
              }
            }
            // repeated string input_side_packet = 5;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_input_side_packet().size());
              for (int i = 0, n = this_._internal_input_side_packet().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_input_side_packet().Get(i));
              }
            }
            // repeated string output_side_packet = 6;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_output_side_packet().size());
              for (int i = 0, n = this_._internal_output_side_packet().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_output_side_packet().Get(i));
              }
            }
            // repeated .google.protobuf.Any node_options = 8;
            {
              total_size += 1UL * this_._internal_node_options_size();
              for (const auto& msg : this_._internal_node_options()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .mediapipe.InputStreamInfo input_stream_info = 13;
            {
              total_size += 1UL * this_._internal_input_stream_info_size();
              for (const auto& msg : this_._internal_input_stream_info()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated string option_value = 17;
            {
              total_size +=
                  2 * ::google::protobuf::internal::FromIntSize(this_._internal_option_value().size());
              for (int i = 0, n = this_._internal_option_value().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_option_value().Get(i));
              }
            }
            // repeated string external_input = 1005;
            {
              total_size +=
                  2 * ::google::protobuf::internal::FromIntSize(this_._internal_external_input().size());
              for (int i = 0, n = this_._internal_external_input().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_external_input().Get(i));
              }
            }
          }
           {
            // string name = 1;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // string calculator = 2;
            if (!this_._internal_calculator().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_calculator());
            }
            // string executor = 14;
            if (!this_._internal_executor().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_executor());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000000fu) {
            // .mediapipe.CalculatorOptions options = 7;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.options_);
            }
            // .mediapipe.InputStreamHandlerConfig input_stream_handler = 11;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.input_stream_handler_);
            }
            // .mediapipe.OutputStreamHandlerConfig output_stream_handler = 12;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.output_stream_handler_);
            }
            // .mediapipe.ProfilerConfig profiler_config = 15 [deprecated = true];
            if (cached_has_bits & 0x00000008u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.profiler_config_);
            }
          }
           {
            // int32 source_layer = 9;
            if (this_._internal_source_layer() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_source_layer());
            }
            // int32 buffer_size_hint = 10;
            if (this_._internal_buffer_size_hint() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_buffer_size_hint());
            }
            // int32 max_in_flight = 16;
            if (this_._internal_max_in_flight() != 0) {
              total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                              this_._internal_max_in_flight());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CalculatorGraphConfig_Node::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CalculatorGraphConfig_Node*>(&to_msg);
  auto& from = static_cast<const CalculatorGraphConfig_Node&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mediapipe.CalculatorGraphConfig.Node)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_input_stream()->MergeFrom(from._internal_input_stream());
  _this->_internal_mutable_output_stream()->MergeFrom(from._internal_output_stream());
  _this->_internal_mutable_input_side_packet()->MergeFrom(from._internal_input_side_packet());
  _this->_internal_mutable_output_side_packet()->MergeFrom(from._internal_output_side_packet());
  _this->_internal_mutable_node_options()->MergeFrom(
      from._internal_node_options());
  _this->_internal_mutable_input_stream_info()->MergeFrom(
      from._internal_input_stream_info());
  _this->_internal_mutable_option_value()->MergeFrom(from._internal_option_value());
  _this->_internal_mutable_external_input()->MergeFrom(from._internal_external_input());
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_calculator().empty()) {
    _this->_internal_set_calculator(from._internal_calculator());
  }
  if (!from._internal_executor().empty()) {
    _this->_internal_set_executor(from._internal_executor());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.options_ != nullptr);
      if (_this->_impl_.options_ == nullptr) {
        _this->_impl_.options_ =
            ::google::protobuf::Message::CopyConstruct<::mediapipe::CalculatorOptions>(arena, *from._impl_.options_);
      } else {
        _this->_impl_.options_->MergeFrom(*from._impl_.options_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.input_stream_handler_ != nullptr);
      if (_this->_impl_.input_stream_handler_ == nullptr) {
        _this->_impl_.input_stream_handler_ =
            ::google::protobuf::Message::CopyConstruct<::mediapipe::InputStreamHandlerConfig>(arena, *from._impl_.input_stream_handler_);
      } else {
        _this->_impl_.input_stream_handler_->MergeFrom(*from._impl_.input_stream_handler_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.output_stream_handler_ != nullptr);
      if (_this->_impl_.output_stream_handler_ == nullptr) {
        _this->_impl_.output_stream_handler_ =
            ::google::protobuf::Message::CopyConstruct<::mediapipe::OutputStreamHandlerConfig>(arena, *from._impl_.output_stream_handler_);
      } else {
        _this->_impl_.output_stream_handler_->MergeFrom(*from._impl_.output_stream_handler_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.profiler_config_ != nullptr);
      if (_this->_impl_.profiler_config_ == nullptr) {
        _this->_impl_.profiler_config_ =
            ::google::protobuf::Message::CopyConstruct<::mediapipe::ProfilerConfig>(arena, *from._impl_.profiler_config_);
      } else {
        _this->_impl_.profiler_config_->MergeFrom(*from._impl_.profiler_config_);
      }
    }
  }
  if (from._internal_source_layer() != 0) {
    _this->_impl_.source_layer_ = from._impl_.source_layer_;
  }
  if (from._internal_buffer_size_hint() != 0) {
    _this->_impl_.buffer_size_hint_ = from._impl_.buffer_size_hint_;
  }
  if (from._internal_max_in_flight() != 0) {
    _this->_impl_.max_in_flight_ = from._impl_.max_in_flight_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CalculatorGraphConfig_Node::CopyFrom(const CalculatorGraphConfig_Node& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mediapipe.CalculatorGraphConfig.Node)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CalculatorGraphConfig_Node::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const CalculatorGraphConfig_Node&>(msg);
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._impl_.options_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._impl_.input_stream_handler_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (!this_._impl_.output_stream_handler_->IsInitialized()) return false;
  }
  return true;
}

void CalculatorGraphConfig_Node::InternalSwap(CalculatorGraphConfig_Node* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.input_stream_.InternalSwap(&other->_impl_.input_stream_);
  _impl_.output_stream_.InternalSwap(&other->_impl_.output_stream_);
  _impl_.input_side_packet_.InternalSwap(&other->_impl_.input_side_packet_);
  _impl_.output_side_packet_.InternalSwap(&other->_impl_.output_side_packet_);
  _impl_.node_options_.InternalSwap(&other->_impl_.node_options_);
  _impl_.input_stream_info_.InternalSwap(&other->_impl_.input_stream_info_);
  _impl_.option_value_.InternalSwap(&other->_impl_.option_value_);
  _impl_.external_input_.InternalSwap(&other->_impl_.external_input_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.calculator_, &other->_impl_.calculator_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.executor_, &other->_impl_.executor_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig_Node, _impl_.max_in_flight_)
      + sizeof(CalculatorGraphConfig_Node::_impl_.max_in_flight_)
      - PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig_Node, _impl_.options_)>(
          reinterpret_cast<char*>(&_impl_.options_),
          reinterpret_cast<char*>(&other->_impl_.options_));
}

::google::protobuf::Metadata CalculatorGraphConfig_Node::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CalculatorGraphConfig::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CalculatorGraphConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig, _impl_._has_bits_);
};

void CalculatorGraphConfig::clear_packet_factory() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packet_factory_.Clear();
}
void CalculatorGraphConfig::clear_packet_generator() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packet_generator_.Clear();
}
void CalculatorGraphConfig::clear_status_handler() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_handler_.Clear();
}
void CalculatorGraphConfig::clear_input_stream_handler() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.input_stream_handler_ != nullptr) _impl_.input_stream_handler_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void CalculatorGraphConfig::clear_output_stream_handler() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.output_stream_handler_ != nullptr) _impl_.output_stream_handler_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void CalculatorGraphConfig::clear_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.options_ != nullptr) _impl_.options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void CalculatorGraphConfig::clear_graph_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.graph_options_.Clear();
}
CalculatorGraphConfig::CalculatorGraphConfig(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mediapipe.CalculatorGraphConfig)
}
inline PROTOBUF_NDEBUG_INLINE CalculatorGraphConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mediapipe::CalculatorGraphConfig& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        node_{visibility, arena, from.node_},
        packet_factory_{visibility, arena, from.packet_factory_},
        packet_generator_{visibility, arena, from.packet_generator_},
        status_handler_{visibility, arena, from.status_handler_},
        input_stream_{visibility, arena, from.input_stream_},
        executor_{visibility, arena, from.executor_},
        output_stream_{visibility, arena, from.output_stream_},
        input_side_packet_{visibility, arena, from.input_side_packet_},
        output_side_packet_{visibility, arena, from.output_side_packet_},
        graph_options_{visibility, arena, from.graph_options_},
        package_(arena, from.package_),
        type_(arena, from.type_) {}

CalculatorGraphConfig::CalculatorGraphConfig(
    ::google::protobuf::Arena* arena,
    const CalculatorGraphConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CalculatorGraphConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.input_stream_handler_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mediapipe::InputStreamHandlerConfig>(
                              arena, *from._impl_.input_stream_handler_)
                        : nullptr;
  _impl_.output_stream_handler_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::mediapipe::OutputStreamHandlerConfig>(
                              arena, *from._impl_.output_stream_handler_)
                        : nullptr;
  _impl_.profiler_config_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::mediapipe::ProfilerConfig>(
                              arena, *from._impl_.profiler_config_)
                        : nullptr;
  _impl_.runtime_info_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::mediapipe::GraphRuntimeInfoConfig>(
                              arena, *from._impl_.runtime_info_)
                        : nullptr;
  _impl_.options_ = (cached_has_bits & 0x00000010u) ? ::google::protobuf::Message::CopyConstruct<::mediapipe::MediaPipeOptions>(
                              arena, *from._impl_.options_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, num_threads_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, num_threads_),
           offsetof(Impl_, report_deadlock_) -
               offsetof(Impl_, num_threads_) +
               sizeof(Impl_::report_deadlock_));

  // @@protoc_insertion_point(copy_constructor:mediapipe.CalculatorGraphConfig)
}
inline PROTOBUF_NDEBUG_INLINE CalculatorGraphConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        node_{visibility, arena},
        packet_factory_{visibility, arena},
        packet_generator_{visibility, arena},
        status_handler_{visibility, arena},
        input_stream_{visibility, arena},
        executor_{visibility, arena},
        output_stream_{visibility, arena},
        input_side_packet_{visibility, arena},
        output_side_packet_{visibility, arena},
        graph_options_{visibility, arena},
        package_(arena),
        type_(arena) {}

inline void CalculatorGraphConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, input_stream_handler_),
           0,
           offsetof(Impl_, report_deadlock_) -
               offsetof(Impl_, input_stream_handler_) +
               sizeof(Impl_::report_deadlock_));
}
CalculatorGraphConfig::~CalculatorGraphConfig() {
  // @@protoc_insertion_point(destructor:mediapipe.CalculatorGraphConfig)
  SharedDtor(*this);
}
inline void CalculatorGraphConfig::SharedDtor(MessageLite& self) {
  CalculatorGraphConfig& this_ = static_cast<CalculatorGraphConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.package_.Destroy();
  this_._impl_.type_.Destroy();
  delete this_._impl_.input_stream_handler_;
  delete this_._impl_.output_stream_handler_;
  delete this_._impl_.profiler_config_;
  delete this_._impl_.runtime_info_;
  delete this_._impl_.options_;
  this_._impl_.~Impl_();
}

inline void* CalculatorGraphConfig::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CalculatorGraphConfig(arena);
}
constexpr auto CalculatorGraphConfig::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig, _impl_.node_) +
          decltype(CalculatorGraphConfig::_impl_.node_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig, _impl_.packet_factory_) +
          decltype(CalculatorGraphConfig::_impl_.packet_factory_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig, _impl_.packet_generator_) +
          decltype(CalculatorGraphConfig::_impl_.packet_generator_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig, _impl_.status_handler_) +
          decltype(CalculatorGraphConfig::_impl_.status_handler_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig, _impl_.input_stream_) +
          decltype(CalculatorGraphConfig::_impl_.input_stream_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig, _impl_.output_stream_) +
          decltype(CalculatorGraphConfig::_impl_.output_stream_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig, _impl_.input_side_packet_) +
          decltype(CalculatorGraphConfig::_impl_.input_side_packet_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig, _impl_.output_side_packet_) +
          decltype(CalculatorGraphConfig::_impl_.output_side_packet_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig, _impl_.executor_) +
          decltype(CalculatorGraphConfig::_impl_.executor_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig, _impl_.graph_options_) +
          decltype(CalculatorGraphConfig::_impl_.graph_options_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(CalculatorGraphConfig), alignof(CalculatorGraphConfig), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CalculatorGraphConfig::PlacementNew_,
                                 sizeof(CalculatorGraphConfig),
                                 alignof(CalculatorGraphConfig));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CalculatorGraphConfig::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CalculatorGraphConfig_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        CalculatorGraphConfig::IsInitializedImpl,
        &CalculatorGraphConfig::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CalculatorGraphConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CalculatorGraphConfig::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CalculatorGraphConfig>(), &CalculatorGraphConfig::ByteSizeLong,
            &CalculatorGraphConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig, _impl_._cached_size_),
        false,
    },
    &CalculatorGraphConfig::kDescriptorMethods,
    &descriptor_table_mediapipe_2fframework_2fcalculator_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CalculatorGraphConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 20, 11, 127, 7> CalculatorGraphConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig, _impl_._has_bits_),
    0, // no _extensions_
    1002, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4290773022,  // skipmap
    offsetof(decltype(_table_), field_entries),
    20,  // num_field_entries
    11,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mediapipe::CalculatorGraphConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .mediapipe.CalculatorGraphConfig.Node node = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig, _impl_.node_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .mediapipe.PacketFactoryConfig packet_factory = 6;
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 1, PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig, _impl_.packet_factory_)}},
    // repeated .mediapipe.PacketGeneratorConfig packet_generator = 7 [deprecated = true];
    {::_pbi::TcParser::FastMtR1,
     {58, 63, 2, PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig, _impl_.packet_generator_)}},
    // int32 num_threads = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CalculatorGraphConfig, _impl_.num_threads_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig, _impl_.num_threads_)}},
    // repeated .mediapipe.StatusHandlerConfig status_handler = 9;
    {::_pbi::TcParser::FastMtR1,
     {74, 63, 3, PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig, _impl_.status_handler_)}},
    // repeated string input_stream = 10;
    {::_pbi::TcParser::FastUR1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig, _impl_.input_stream_)}},
    // int32 max_queue_size = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CalculatorGraphConfig, _impl_.max_queue_size_), 63>(),
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig, _impl_.max_queue_size_)}},
    // .mediapipe.InputStreamHandlerConfig input_stream_handler = 12;
    {::_pbi::TcParser::FastMtS1,
     {98, 0, 4, PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig, _impl_.input_stream_handler_)}},
    // .mediapipe.OutputStreamHandlerConfig output_stream_handler = 13;
    {::_pbi::TcParser::FastMtS1,
     {106, 1, 5, PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig, _impl_.output_stream_handler_)}},
    // repeated .mediapipe.ExecutorConfig executor = 14;
    {::_pbi::TcParser::FastMtR1,
     {114, 63, 6, PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig, _impl_.executor_)}},
    // repeated string output_stream = 15;
    {::_pbi::TcParser::FastUR1,
     {122, 63, 0, PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig, _impl_.output_stream_)}},
    // repeated string input_side_packet = 16;
    {::_pbi::TcParser::FastUR2,
     {386, 63, 0, PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig, _impl_.input_side_packet_)}},
    // repeated string output_side_packet = 17;
    {::_pbi::TcParser::FastUR2,
     {394, 63, 0, PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig, _impl_.output_side_packet_)}},
    // .mediapipe.ProfilerConfig profiler_config = 18;
    {::_pbi::TcParser::FastMtS2,
     {402, 2, 7, PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig, _impl_.profiler_config_)}},
    // string package = 19;
    {::_pbi::TcParser::FastUS2,
     {410, 63, 0, PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig, _impl_.package_)}},
    // string type = 20;
    {::_pbi::TcParser::FastUS2,
     {418, 63, 0, PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig, _impl_.type_)}},
    // bool report_deadlock = 21;
    {::_pbi::TcParser::FastV8S2,
     {424, 63, 0, PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig, _impl_.report_deadlock_)}},
    // .mediapipe.GraphRuntimeInfoConfig runtime_info = 22;
    {::_pbi::TcParser::FastMtS2,
     {434, 3, 8, PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig, _impl_.runtime_info_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // .mediapipe.MediaPipeOptions options = 1001;
    {::_pbi::TcParser::FastMtS2,
     {16074, 4, 9, PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig, _impl_.options_)}},
    // repeated .google.protobuf.Any graph_options = 1002;
    {::_pbi::TcParser::FastMtR2,
     {16082, 63, 10, PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig, _impl_.graph_options_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    1001, 0, 1,
    65532, 18,
    65535, 65535
  }}, {{
    // repeated .mediapipe.CalculatorGraphConfig.Node node = 1;
    {PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig, _impl_.node_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .mediapipe.PacketFactoryConfig packet_factory = 6;
    {PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig, _impl_.packet_factory_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .mediapipe.PacketGeneratorConfig packet_generator = 7 [deprecated = true];
    {PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig, _impl_.packet_generator_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 num_threads = 8;
    {PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig, _impl_.num_threads_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // repeated .mediapipe.StatusHandlerConfig status_handler = 9;
    {PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig, _impl_.status_handler_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string input_stream = 10;
    {PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig, _impl_.input_stream_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // int32 max_queue_size = 11;
    {PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig, _impl_.max_queue_size_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .mediapipe.InputStreamHandlerConfig input_stream_handler = 12;
    {PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig, _impl_.input_stream_handler_), _Internal::kHasBitsOffset + 0, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .mediapipe.OutputStreamHandlerConfig output_stream_handler = 13;
    {PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig, _impl_.output_stream_handler_), _Internal::kHasBitsOffset + 1, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .mediapipe.ExecutorConfig executor = 14;
    {PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig, _impl_.executor_), -1, 6,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string output_stream = 15;
    {PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig, _impl_.output_stream_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string input_side_packet = 16;
    {PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig, _impl_.input_side_packet_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string output_side_packet = 17;
    {PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig, _impl_.output_side_packet_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // .mediapipe.ProfilerConfig profiler_config = 18;
    {PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig, _impl_.profiler_config_), _Internal::kHasBitsOffset + 2, 7,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string package = 19;
    {PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig, _impl_.package_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string type = 20;
    {PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig, _impl_.type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool report_deadlock = 21;
    {PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig, _impl_.report_deadlock_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .mediapipe.GraphRuntimeInfoConfig runtime_info = 22;
    {PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig, _impl_.runtime_info_), _Internal::kHasBitsOffset + 3, 8,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .mediapipe.MediaPipeOptions options = 1001;
    {PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig, _impl_.options_), _Internal::kHasBitsOffset + 4, 9,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .google.protobuf.Any graph_options = 1002;
    {PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig, _impl_.graph_options_), -1, 10,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mediapipe::CalculatorGraphConfig_Node>()},
    {::_pbi::TcParser::GetTable<::mediapipe::PacketFactoryConfig>()},
    {::_pbi::TcParser::GetTable<::mediapipe::PacketGeneratorConfig>()},
    {::_pbi::TcParser::GetTable<::mediapipe::StatusHandlerConfig>()},
    {::_pbi::TcParser::GetTable<::mediapipe::InputStreamHandlerConfig>()},
    {::_pbi::TcParser::GetTable<::mediapipe::OutputStreamHandlerConfig>()},
    {::_pbi::TcParser::GetTable<::mediapipe::ExecutorConfig>()},
    {::_pbi::TcParser::GetTable<::mediapipe::ProfilerConfig>()},
    {::_pbi::TcParser::GetTable<::mediapipe::GraphRuntimeInfoConfig>()},
    {::_pbi::TcParser::GetTable<::mediapipe::MediaPipeOptions>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Any>()},
  }}, {{
    "\37\0\0\0\0\0\14\0\0\0\0\15\21\22\0\7\4\0\0\0\0\0\0\0"
    "mediapipe.CalculatorGraphConfig"
    "input_stream"
    "output_stream"
    "input_side_packet"
    "output_side_packet"
    "package"
    "type"
  }},
};

PROTOBUF_NOINLINE void CalculatorGraphConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:mediapipe.CalculatorGraphConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.node_.Clear();
  _impl_.packet_factory_.Clear();
  _impl_.packet_generator_.Clear();
  _impl_.status_handler_.Clear();
  _impl_.input_stream_.Clear();
  _impl_.executor_.Clear();
  _impl_.output_stream_.Clear();
  _impl_.input_side_packet_.Clear();
  _impl_.output_side_packet_.Clear();
  _impl_.graph_options_.Clear();
  _impl_.package_.ClearToEmpty();
  _impl_.type_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.input_stream_handler_ != nullptr);
      _impl_.input_stream_handler_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.output_stream_handler_ != nullptr);
      _impl_.output_stream_handler_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.profiler_config_ != nullptr);
      _impl_.profiler_config_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.runtime_info_ != nullptr);
      _impl_.runtime_info_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.options_ != nullptr);
      _impl_.options_->Clear();
    }
  }
  ::memset(&_impl_.num_threads_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.report_deadlock_) -
      reinterpret_cast<char*>(&_impl_.num_threads_)) + sizeof(_impl_.report_deadlock_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CalculatorGraphConfig::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CalculatorGraphConfig& this_ = static_cast<const CalculatorGraphConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CalculatorGraphConfig::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CalculatorGraphConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mediapipe.CalculatorGraphConfig)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .mediapipe.CalculatorGraphConfig.Node node = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_node_size());
               i < n; i++) {
            const auto& repfield = this_._internal_node().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .mediapipe.PacketFactoryConfig packet_factory = 6;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_packet_factory_size());
               i < n; i++) {
            const auto& repfield = this_._internal_packet_factory().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    6, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .mediapipe.PacketGeneratorConfig packet_generator = 7 [deprecated = true];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_packet_generator_size());
               i < n; i++) {
            const auto& repfield = this_._internal_packet_generator().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    7, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // int32 num_threads = 8;
          if (this_._internal_num_threads() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<8>(
                    stream, this_._internal_num_threads(), target);
          }

          // repeated .mediapipe.StatusHandlerConfig status_handler = 9;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_status_handler_size());
               i < n; i++) {
            const auto& repfield = this_._internal_status_handler().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    9, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated string input_stream = 10;
          for (int i = 0, n = this_._internal_input_stream_size(); i < n; ++i) {
            const auto& s = this_._internal_input_stream().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mediapipe.CalculatorGraphConfig.input_stream");
            target = stream->WriteString(10, s, target);
          }

          // int32 max_queue_size = 11;
          if (this_._internal_max_queue_size() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<11>(
                    stream, this_._internal_max_queue_size(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mediapipe.InputStreamHandlerConfig input_stream_handler = 12;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                12, *this_._impl_.input_stream_handler_, this_._impl_.input_stream_handler_->GetCachedSize(), target,
                stream);
          }

          // .mediapipe.OutputStreamHandlerConfig output_stream_handler = 13;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                13, *this_._impl_.output_stream_handler_, this_._impl_.output_stream_handler_->GetCachedSize(), target,
                stream);
          }

          // repeated .mediapipe.ExecutorConfig executor = 14;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_executor_size());
               i < n; i++) {
            const auto& repfield = this_._internal_executor().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    14, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated string output_stream = 15;
          for (int i = 0, n = this_._internal_output_stream_size(); i < n; ++i) {
            const auto& s = this_._internal_output_stream().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mediapipe.CalculatorGraphConfig.output_stream");
            target = stream->WriteString(15, s, target);
          }

          // repeated string input_side_packet = 16;
          for (int i = 0, n = this_._internal_input_side_packet_size(); i < n; ++i) {
            const auto& s = this_._internal_input_side_packet().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mediapipe.CalculatorGraphConfig.input_side_packet");
            target = stream->WriteString(16, s, target);
          }

          // repeated string output_side_packet = 17;
          for (int i = 0, n = this_._internal_output_side_packet_size(); i < n; ++i) {
            const auto& s = this_._internal_output_side_packet().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mediapipe.CalculatorGraphConfig.output_side_packet");
            target = stream->WriteString(17, s, target);
          }

          // .mediapipe.ProfilerConfig profiler_config = 18;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                18, *this_._impl_.profiler_config_, this_._impl_.profiler_config_->GetCachedSize(), target,
                stream);
          }

          // string package = 19;
          if (!this_._internal_package().empty()) {
            const std::string& _s = this_._internal_package();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mediapipe.CalculatorGraphConfig.package");
            target = stream->WriteStringMaybeAliased(19, _s, target);
          }

          // string type = 20;
          if (!this_._internal_type().empty()) {
            const std::string& _s = this_._internal_type();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mediapipe.CalculatorGraphConfig.type");
            target = stream->WriteStringMaybeAliased(20, _s, target);
          }

          // bool report_deadlock = 21;
          if (this_._internal_report_deadlock() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                21, this_._internal_report_deadlock(), target);
          }

          // .mediapipe.GraphRuntimeInfoConfig runtime_info = 22;
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                22, *this_._impl_.runtime_info_, this_._impl_.runtime_info_->GetCachedSize(), target,
                stream);
          }

          // .mediapipe.MediaPipeOptions options = 1001;
          if (cached_has_bits & 0x00000010u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1001, *this_._impl_.options_, this_._impl_.options_->GetCachedSize(), target,
                stream);
          }

          // repeated .google.protobuf.Any graph_options = 1002;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_graph_options_size());
               i < n; i++) {
            const auto& repfield = this_._internal_graph_options().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1002, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mediapipe.CalculatorGraphConfig)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CalculatorGraphConfig::ByteSizeLong(const MessageLite& base) {
          const CalculatorGraphConfig& this_ = static_cast<const CalculatorGraphConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CalculatorGraphConfig::ByteSizeLong() const {
          const CalculatorGraphConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mediapipe.CalculatorGraphConfig)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .mediapipe.CalculatorGraphConfig.Node node = 1;
            {
              total_size += 1UL * this_._internal_node_size();
              for (const auto& msg : this_._internal_node()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .mediapipe.PacketFactoryConfig packet_factory = 6;
            {
              total_size += 1UL * this_._internal_packet_factory_size();
              for (const auto& msg : this_._internal_packet_factory()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .mediapipe.PacketGeneratorConfig packet_generator = 7 [deprecated = true];
            {
              total_size += 1UL * this_._internal_packet_generator_size();
              for (const auto& msg : this_._internal_packet_generator()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .mediapipe.StatusHandlerConfig status_handler = 9;
            {
              total_size += 1UL * this_._internal_status_handler_size();
              for (const auto& msg : this_._internal_status_handler()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated string input_stream = 10;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_input_stream().size());
              for (int i = 0, n = this_._internal_input_stream().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_input_stream().Get(i));
              }
            }
            // repeated .mediapipe.ExecutorConfig executor = 14;
            {
              total_size += 1UL * this_._internal_executor_size();
              for (const auto& msg : this_._internal_executor()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated string output_stream = 15;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_output_stream().size());
              for (int i = 0, n = this_._internal_output_stream().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_output_stream().Get(i));
              }
            }
            // repeated string input_side_packet = 16;
            {
              total_size +=
                  2 * ::google::protobuf::internal::FromIntSize(this_._internal_input_side_packet().size());
              for (int i = 0, n = this_._internal_input_side_packet().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_input_side_packet().Get(i));
              }
            }
            // repeated string output_side_packet = 17;
            {
              total_size +=
                  2 * ::google::protobuf::internal::FromIntSize(this_._internal_output_side_packet().size());
              for (int i = 0, n = this_._internal_output_side_packet().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_output_side_packet().Get(i));
              }
            }
            // repeated .google.protobuf.Any graph_options = 1002;
            {
              total_size += 2UL * this_._internal_graph_options_size();
              for (const auto& msg : this_._internal_graph_options()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string package = 19;
            if (!this_._internal_package().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_package());
            }
            // string type = 20;
            if (!this_._internal_type().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_type());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000001fu) {
            // .mediapipe.InputStreamHandlerConfig input_stream_handler = 12;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.input_stream_handler_);
            }
            // .mediapipe.OutputStreamHandlerConfig output_stream_handler = 13;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.output_stream_handler_);
            }
            // .mediapipe.ProfilerConfig profiler_config = 18;
            if (cached_has_bits & 0x00000004u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.profiler_config_);
            }
            // .mediapipe.GraphRuntimeInfoConfig runtime_info = 22;
            if (cached_has_bits & 0x00000008u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.runtime_info_);
            }
            // .mediapipe.MediaPipeOptions options = 1001;
            if (cached_has_bits & 0x00000010u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.options_);
            }
          }
           {
            // int32 num_threads = 8;
            if (this_._internal_num_threads() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_num_threads());
            }
            // int32 max_queue_size = 11;
            if (this_._internal_max_queue_size() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_max_queue_size());
            }
            // bool report_deadlock = 21;
            if (this_._internal_report_deadlock() != 0) {
              total_size += 3;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CalculatorGraphConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CalculatorGraphConfig*>(&to_msg);
  auto& from = static_cast<const CalculatorGraphConfig&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mediapipe.CalculatorGraphConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_node()->MergeFrom(
      from._internal_node());
  _this->_internal_mutable_packet_factory()->MergeFrom(
      from._internal_packet_factory());
  _this->_internal_mutable_packet_generator()->MergeFrom(
      from._internal_packet_generator());
  _this->_internal_mutable_status_handler()->MergeFrom(
      from._internal_status_handler());
  _this->_internal_mutable_input_stream()->MergeFrom(from._internal_input_stream());
  _this->_internal_mutable_executor()->MergeFrom(
      from._internal_executor());
  _this->_internal_mutable_output_stream()->MergeFrom(from._internal_output_stream());
  _this->_internal_mutable_input_side_packet()->MergeFrom(from._internal_input_side_packet());
  _this->_internal_mutable_output_side_packet()->MergeFrom(from._internal_output_side_packet());
  _this->_internal_mutable_graph_options()->MergeFrom(
      from._internal_graph_options());
  if (!from._internal_package().empty()) {
    _this->_internal_set_package(from._internal_package());
  }
  if (!from._internal_type().empty()) {
    _this->_internal_set_type(from._internal_type());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.input_stream_handler_ != nullptr);
      if (_this->_impl_.input_stream_handler_ == nullptr) {
        _this->_impl_.input_stream_handler_ =
            ::google::protobuf::Message::CopyConstruct<::mediapipe::InputStreamHandlerConfig>(arena, *from._impl_.input_stream_handler_);
      } else {
        _this->_impl_.input_stream_handler_->MergeFrom(*from._impl_.input_stream_handler_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.output_stream_handler_ != nullptr);
      if (_this->_impl_.output_stream_handler_ == nullptr) {
        _this->_impl_.output_stream_handler_ =
            ::google::protobuf::Message::CopyConstruct<::mediapipe::OutputStreamHandlerConfig>(arena, *from._impl_.output_stream_handler_);
      } else {
        _this->_impl_.output_stream_handler_->MergeFrom(*from._impl_.output_stream_handler_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.profiler_config_ != nullptr);
      if (_this->_impl_.profiler_config_ == nullptr) {
        _this->_impl_.profiler_config_ =
            ::google::protobuf::Message::CopyConstruct<::mediapipe::ProfilerConfig>(arena, *from._impl_.profiler_config_);
      } else {
        _this->_impl_.profiler_config_->MergeFrom(*from._impl_.profiler_config_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.runtime_info_ != nullptr);
      if (_this->_impl_.runtime_info_ == nullptr) {
        _this->_impl_.runtime_info_ =
            ::google::protobuf::Message::CopyConstruct<::mediapipe::GraphRuntimeInfoConfig>(arena, *from._impl_.runtime_info_);
      } else {
        _this->_impl_.runtime_info_->MergeFrom(*from._impl_.runtime_info_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(from._impl_.options_ != nullptr);
      if (_this->_impl_.options_ == nullptr) {
        _this->_impl_.options_ =
            ::google::protobuf::Message::CopyConstruct<::mediapipe::MediaPipeOptions>(arena, *from._impl_.options_);
      } else {
        _this->_impl_.options_->MergeFrom(*from._impl_.options_);
      }
    }
  }
  if (from._internal_num_threads() != 0) {
    _this->_impl_.num_threads_ = from._impl_.num_threads_;
  }
  if (from._internal_max_queue_size() != 0) {
    _this->_impl_.max_queue_size_ = from._impl_.max_queue_size_;
  }
  if (from._internal_report_deadlock() != 0) {
    _this->_impl_.report_deadlock_ = from._impl_.report_deadlock_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CalculatorGraphConfig::CopyFrom(const CalculatorGraphConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mediapipe.CalculatorGraphConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CalculatorGraphConfig::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const CalculatorGraphConfig&>(msg);
  if (!::google::protobuf::internal::AllAreInitialized(this_._internal_node()))
    return false;
  if (!::google::protobuf::internal::AllAreInitialized(this_._internal_packet_factory()))
    return false;
  if (!::google::protobuf::internal::AllAreInitialized(this_._internal_packet_generator()))
    return false;
  if (!::google::protobuf::internal::AllAreInitialized(this_._internal_status_handler()))
    return false;
  if (!::google::protobuf::internal::AllAreInitialized(this_._internal_executor()))
    return false;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._impl_.input_stream_handler_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._impl_.output_stream_handler_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (!this_._impl_.options_->IsInitialized()) return false;
  }
  return true;
}

void CalculatorGraphConfig::InternalSwap(CalculatorGraphConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.node_.InternalSwap(&other->_impl_.node_);
  _impl_.packet_factory_.InternalSwap(&other->_impl_.packet_factory_);
  _impl_.packet_generator_.InternalSwap(&other->_impl_.packet_generator_);
  _impl_.status_handler_.InternalSwap(&other->_impl_.status_handler_);
  _impl_.input_stream_.InternalSwap(&other->_impl_.input_stream_);
  _impl_.executor_.InternalSwap(&other->_impl_.executor_);
  _impl_.output_stream_.InternalSwap(&other->_impl_.output_stream_);
  _impl_.input_side_packet_.InternalSwap(&other->_impl_.input_side_packet_);
  _impl_.output_side_packet_.InternalSwap(&other->_impl_.output_side_packet_);
  _impl_.graph_options_.InternalSwap(&other->_impl_.graph_options_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.package_, &other->_impl_.package_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.type_, &other->_impl_.type_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig, _impl_.report_deadlock_)
      + sizeof(CalculatorGraphConfig::_impl_.report_deadlock_)
      - PROTOBUF_FIELD_OFFSET(CalculatorGraphConfig, _impl_.input_stream_handler_)>(
          reinterpret_cast<char*>(&_impl_.input_stream_handler_),
          reinterpret_cast<char*>(&other->_impl_.input_stream_handler_));
}

::google::protobuf::Metadata CalculatorGraphConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace mediapipe
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_mediapipe_2fframework_2fcalculator_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
