// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: mediapipe/framework/packet_factory.proto
// Protobuf C++ Version: 5.29.5

#ifndef mediapipe_2fframework_2fpacket_5ffactory_2eproto_2epb_2eh
#define mediapipe_2fframework_2fpacket_5ffactory_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029005
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_mediapipe_2fframework_2fpacket_5ffactory_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_mediapipe_2fframework_2fpacket_5ffactory_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_mediapipe_2fframework_2fpacket_5ffactory_2eproto;
namespace mediapipe {
class PacketFactoryConfig;
struct PacketFactoryConfigDefaultTypeInternal;
extern PacketFactoryConfigDefaultTypeInternal _PacketFactoryConfig_default_instance_;
class PacketFactoryOptions;
struct PacketFactoryOptionsDefaultTypeInternal;
extern PacketFactoryOptionsDefaultTypeInternal _PacketFactoryOptions_default_instance_;
class PacketManagerConfig;
struct PacketManagerConfigDefaultTypeInternal;
extern PacketManagerConfigDefaultTypeInternal _PacketManagerConfig_default_instance_;
}  // namespace mediapipe
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace mediapipe {

// ===================================================================


// -------------------------------------------------------------------

class PacketFactoryOptions final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mediapipe.PacketFactoryOptions) */ {
 public:
  inline PacketFactoryOptions() : PacketFactoryOptions(nullptr) {}
  ~PacketFactoryOptions() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PacketFactoryOptions* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PacketFactoryOptions));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PacketFactoryOptions(
      ::google::protobuf::internal::ConstantInitialized);

  inline PacketFactoryOptions(const PacketFactoryOptions& from) : PacketFactoryOptions(nullptr, from) {}
  inline PacketFactoryOptions(PacketFactoryOptions&& from) noexcept
      : PacketFactoryOptions(nullptr, std::move(from)) {}
  inline PacketFactoryOptions& operator=(const PacketFactoryOptions& from) {
    CopyFrom(from);
    return *this;
  }
  inline PacketFactoryOptions& operator=(PacketFactoryOptions&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PacketFactoryOptions& default_instance() {
    return *internal_default_instance();
  }
  static inline const PacketFactoryOptions* internal_default_instance() {
    return reinterpret_cast<const PacketFactoryOptions*>(
        &_PacketFactoryOptions_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(PacketFactoryOptions& a, PacketFactoryOptions& b) { a.Swap(&b); }
  inline void Swap(PacketFactoryOptions* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PacketFactoryOptions* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PacketFactoryOptions* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PacketFactoryOptions>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PacketFactoryOptions& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PacketFactoryOptions& from) { PacketFactoryOptions::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PacketFactoryOptions* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mediapipe.PacketFactoryOptions"; }

 protected:
  explicit PacketFactoryOptions(::google::protobuf::Arena* arena);
  PacketFactoryOptions(::google::protobuf::Arena* arena, const PacketFactoryOptions& from);
  PacketFactoryOptions(::google::protobuf::Arena* arena, PacketFactoryOptions&& from) noexcept
      : PacketFactoryOptions(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            typename = typename _proto_TypeTraits::Singular>
  inline bool HasExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<PacketFactoryOptions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _impl_._extensions_.Has(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void ClearExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<PacketFactoryOptions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) {
    _impl_._extensions_.ClearExtension(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            typename = typename _proto_TypeTraits::Repeated>
  inline int ExtensionSize(
      const ::google::protobuf::internal::ExtensionIdentifier<PacketFactoryOptions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _impl_._extensions_.ExtensionSize(id.number());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<!_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Singular::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<PacketFactoryOptions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, id.default_value());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Singular::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<PacketFactoryOptions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, id.default_value());
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Singular::MutableType MutableExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<PacketFactoryOptions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Mutable(id.number(), _field_type, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<PacketFactoryOptions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::ConstType value) {
    _proto_TypeTraits::Set(id.number(), _field_type, value, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetAllocatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<PacketFactoryOptions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::MutableType value) {
    _proto_TypeTraits::SetAllocated(id.number(), _field_type, value,
                                    &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void UnsafeArenaSetAllocatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<PacketFactoryOptions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::MutableType value) {
    _proto_TypeTraits::UnsafeArenaSetAllocated(id.number(), _field_type,
                                               value, &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  PROTOBUF_NODISCARD inline
      typename _proto_TypeTraits::Singular::MutableType
      ReleaseExtension(
          const ::google::protobuf::internal::ExtensionIdentifier<PacketFactoryOptions, _proto_TypeTraits,
                                           _field_type, _is_packed>& id) {
    return _proto_TypeTraits::Release(id.number(), _field_type, &_impl_._extensions_);
  }
  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Singular::MutableType
  UnsafeArenaReleaseExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<PacketFactoryOptions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) {
    return _proto_TypeTraits::UnsafeArenaRelease(id.number(), _field_type,
                                                 &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<!_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Repeated::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<PacketFactoryOptions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) const {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, index);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed,
            std::enable_if_t<_proto_TypeTraits::kLifetimeBound, int> = 0>
  inline typename _proto_TypeTraits::Repeated::ConstType GetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<PacketFactoryOptions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) const ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Get(id.number(), _impl_._extensions_, index);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::MutableType MutableExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<PacketFactoryOptions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index) ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::Mutable(id.number(), index, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<PacketFactoryOptions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      int index, typename _proto_TypeTraits::Repeated::ConstType value) {
    _proto_TypeTraits::Set(id.number(), index, value, &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::MutableType AddExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<PacketFactoryOptions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    typename _proto_TypeTraits::Repeated::MutableType to_add =
        _proto_TypeTraits::Add(id.number(), _field_type, &_impl_._extensions_);
    return to_add;
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline void AddExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<PacketFactoryOptions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Repeated::ConstType value) {
    _proto_TypeTraits::Add(id.number(), _field_type, _is_packed, value,
                           &_impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline const typename _proto_TypeTraits::Repeated::RepeatedFieldType&
  GetRepeatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<PacketFactoryOptions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id) const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::GetRepeated(id.number(), _impl_._extensions_);
  }

  template <typename _proto_TypeTraits, ::google::protobuf::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::RepeatedFieldType*
  MutableRepeatedExtension(
      const ::google::protobuf::internal::ExtensionIdentifier<PacketFactoryOptions, _proto_TypeTraits,
                                       _field_type, _is_packed>& id)
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _proto_TypeTraits::MutableRepeated(id.number(), _field_type,
                                              _is_packed, &_impl_._extensions_);
  }
  // @@protoc_insertion_point(class_scope:mediapipe.PacketFactoryOptions)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PacketFactoryOptions& from_msg);
    ::google::protobuf::internal::ExtensionSet _extensions_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_mediapipe_2fframework_2fpacket_5ffactory_2eproto;
};
// -------------------------------------------------------------------

class PacketFactoryConfig final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mediapipe.PacketFactoryConfig) */ {
 public:
  inline PacketFactoryConfig() : PacketFactoryConfig(nullptr) {}
  ~PacketFactoryConfig() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PacketFactoryConfig* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PacketFactoryConfig));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PacketFactoryConfig(
      ::google::protobuf::internal::ConstantInitialized);

  inline PacketFactoryConfig(const PacketFactoryConfig& from) : PacketFactoryConfig(nullptr, from) {}
  inline PacketFactoryConfig(PacketFactoryConfig&& from) noexcept
      : PacketFactoryConfig(nullptr, std::move(from)) {}
  inline PacketFactoryConfig& operator=(const PacketFactoryConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline PacketFactoryConfig& operator=(PacketFactoryConfig&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PacketFactoryConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const PacketFactoryConfig* internal_default_instance() {
    return reinterpret_cast<const PacketFactoryConfig*>(
        &_PacketFactoryConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(PacketFactoryConfig& a, PacketFactoryConfig& b) { a.Swap(&b); }
  inline void Swap(PacketFactoryConfig* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PacketFactoryConfig* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PacketFactoryConfig* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PacketFactoryConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PacketFactoryConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PacketFactoryConfig& from) { PacketFactoryConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PacketFactoryConfig* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mediapipe.PacketFactoryConfig"; }

 protected:
  explicit PacketFactoryConfig(::google::protobuf::Arena* arena);
  PacketFactoryConfig(::google::protobuf::Arena* arena, const PacketFactoryConfig& from);
  PacketFactoryConfig(::google::protobuf::Arena* arena, PacketFactoryConfig&& from) noexcept
      : PacketFactoryConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPacketFactoryFieldNumber = 1,
    kOutputSidePacketFieldNumber = 2,
    kExternalOutputFieldNumber = 1002,
    kOptionsFieldNumber = 3,
  };
  // optional string packet_factory = 1;
  bool has_packet_factory() const;
  void clear_packet_factory() ;
  const std::string& packet_factory() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_packet_factory(Arg_&& arg, Args_... args);
  std::string* mutable_packet_factory();
  PROTOBUF_NODISCARD std::string* release_packet_factory();
  void set_allocated_packet_factory(std::string* value);

  private:
  const std::string& _internal_packet_factory() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_packet_factory(
      const std::string& value);
  std::string* _internal_mutable_packet_factory();

  public:
  // optional string output_side_packet = 2;
  bool has_output_side_packet() const;
  void clear_output_side_packet() ;
  const std::string& output_side_packet() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_output_side_packet(Arg_&& arg, Args_... args);
  std::string* mutable_output_side_packet();
  PROTOBUF_NODISCARD std::string* release_output_side_packet();
  void set_allocated_output_side_packet(std::string* value);

  private:
  const std::string& _internal_output_side_packet() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_output_side_packet(
      const std::string& value);
  std::string* _internal_mutable_output_side_packet();

  public:
  // optional string external_output = 1002;
  bool has_external_output() const;
  void clear_external_output() ;
  const std::string& external_output() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_external_output(Arg_&& arg, Args_... args);
  std::string* mutable_external_output();
  PROTOBUF_NODISCARD std::string* release_external_output();
  void set_allocated_external_output(std::string* value);

  private:
  const std::string& _internal_external_output() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_external_output(
      const std::string& value);
  std::string* _internal_mutable_external_output();

  public:
  // optional .mediapipe.PacketFactoryOptions options = 3;
  bool has_options() const;
  void clear_options() ;
  const ::mediapipe::PacketFactoryOptions& options() const;
  PROTOBUF_NODISCARD ::mediapipe::PacketFactoryOptions* release_options();
  ::mediapipe::PacketFactoryOptions* mutable_options();
  void set_allocated_options(::mediapipe::PacketFactoryOptions* value);
  void unsafe_arena_set_allocated_options(::mediapipe::PacketFactoryOptions* value);
  ::mediapipe::PacketFactoryOptions* unsafe_arena_release_options();

  private:
  const ::mediapipe::PacketFactoryOptions& _internal_options() const;
  ::mediapipe::PacketFactoryOptions* _internal_mutable_options();

  public:
  // @@protoc_insertion_point(class_scope:mediapipe.PacketFactoryConfig)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      85, 7>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PacketFactoryConfig& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr packet_factory_;
    ::google::protobuf::internal::ArenaStringPtr output_side_packet_;
    ::google::protobuf::internal::ArenaStringPtr external_output_;
    ::mediapipe::PacketFactoryOptions* options_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_mediapipe_2fframework_2fpacket_5ffactory_2eproto;
};
// -------------------------------------------------------------------

class PacketManagerConfig final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mediapipe.PacketManagerConfig) */ {
 public:
  inline PacketManagerConfig() : PacketManagerConfig(nullptr) {}
  ~PacketManagerConfig() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PacketManagerConfig* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PacketManagerConfig));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PacketManagerConfig(
      ::google::protobuf::internal::ConstantInitialized);

  inline PacketManagerConfig(const PacketManagerConfig& from) : PacketManagerConfig(nullptr, from) {}
  inline PacketManagerConfig(PacketManagerConfig&& from) noexcept
      : PacketManagerConfig(nullptr, std::move(from)) {}
  inline PacketManagerConfig& operator=(const PacketManagerConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline PacketManagerConfig& operator=(PacketManagerConfig&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PacketManagerConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const PacketManagerConfig* internal_default_instance() {
    return reinterpret_cast<const PacketManagerConfig*>(
        &_PacketManagerConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(PacketManagerConfig& a, PacketManagerConfig& b) { a.Swap(&b); }
  inline void Swap(PacketManagerConfig* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PacketManagerConfig* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PacketManagerConfig* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PacketManagerConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PacketManagerConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PacketManagerConfig& from) { PacketManagerConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PacketManagerConfig* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mediapipe.PacketManagerConfig"; }

 protected:
  explicit PacketManagerConfig(::google::protobuf::Arena* arena);
  PacketManagerConfig(::google::protobuf::Arena* arena, const PacketManagerConfig& from);
  PacketManagerConfig(::google::protobuf::Arena* arena, PacketManagerConfig&& from) noexcept
      : PacketManagerConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPacketFieldNumber = 1,
  };
  // repeated .mediapipe.PacketFactoryConfig packet = 1;
  int packet_size() const;
  private:
  int _internal_packet_size() const;

  public:
  void clear_packet() ;
  ::mediapipe::PacketFactoryConfig* mutable_packet(int index);
  ::google::protobuf::RepeatedPtrField<::mediapipe::PacketFactoryConfig>* mutable_packet();

  private:
  const ::google::protobuf::RepeatedPtrField<::mediapipe::PacketFactoryConfig>& _internal_packet() const;
  ::google::protobuf::RepeatedPtrField<::mediapipe::PacketFactoryConfig>* _internal_mutable_packet();
  public:
  const ::mediapipe::PacketFactoryConfig& packet(int index) const;
  ::mediapipe::PacketFactoryConfig* add_packet();
  const ::google::protobuf::RepeatedPtrField<::mediapipe::PacketFactoryConfig>& packet() const;
  // @@protoc_insertion_point(class_scope:mediapipe.PacketManagerConfig)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PacketManagerConfig& from_msg);
    ::google::protobuf::RepeatedPtrField< ::mediapipe::PacketFactoryConfig > packet_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_mediapipe_2fframework_2fpacket_5ffactory_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// PacketFactoryOptions

// -------------------------------------------------------------------

// PacketFactoryConfig

// optional string packet_factory = 1;
inline bool PacketFactoryConfig::has_packet_factory() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void PacketFactoryConfig::clear_packet_factory() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packet_factory_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& PacketFactoryConfig::packet_factory() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mediapipe.PacketFactoryConfig.packet_factory)
  return _internal_packet_factory();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PacketFactoryConfig::set_packet_factory(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.packet_factory_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:mediapipe.PacketFactoryConfig.packet_factory)
}
inline std::string* PacketFactoryConfig::mutable_packet_factory() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_packet_factory();
  // @@protoc_insertion_point(field_mutable:mediapipe.PacketFactoryConfig.packet_factory)
  return _s;
}
inline const std::string& PacketFactoryConfig::_internal_packet_factory() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.packet_factory_.Get();
}
inline void PacketFactoryConfig::_internal_set_packet_factory(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.packet_factory_.Set(value, GetArena());
}
inline std::string* PacketFactoryConfig::_internal_mutable_packet_factory() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.packet_factory_.Mutable( GetArena());
}
inline std::string* PacketFactoryConfig::release_packet_factory() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mediapipe.PacketFactoryConfig.packet_factory)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.packet_factory_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.packet_factory_.Set("", GetArena());
  }
  return released;
}
inline void PacketFactoryConfig::set_allocated_packet_factory(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.packet_factory_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.packet_factory_.IsDefault()) {
    _impl_.packet_factory_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:mediapipe.PacketFactoryConfig.packet_factory)
}

// optional string output_side_packet = 2;
inline bool PacketFactoryConfig::has_output_side_packet() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void PacketFactoryConfig::clear_output_side_packet() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.output_side_packet_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& PacketFactoryConfig::output_side_packet() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mediapipe.PacketFactoryConfig.output_side_packet)
  return _internal_output_side_packet();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PacketFactoryConfig::set_output_side_packet(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.output_side_packet_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:mediapipe.PacketFactoryConfig.output_side_packet)
}
inline std::string* PacketFactoryConfig::mutable_output_side_packet() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_output_side_packet();
  // @@protoc_insertion_point(field_mutable:mediapipe.PacketFactoryConfig.output_side_packet)
  return _s;
}
inline const std::string& PacketFactoryConfig::_internal_output_side_packet() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.output_side_packet_.Get();
}
inline void PacketFactoryConfig::_internal_set_output_side_packet(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.output_side_packet_.Set(value, GetArena());
}
inline std::string* PacketFactoryConfig::_internal_mutable_output_side_packet() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.output_side_packet_.Mutable( GetArena());
}
inline std::string* PacketFactoryConfig::release_output_side_packet() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mediapipe.PacketFactoryConfig.output_side_packet)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.output_side_packet_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.output_side_packet_.Set("", GetArena());
  }
  return released;
}
inline void PacketFactoryConfig::set_allocated_output_side_packet(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.output_side_packet_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.output_side_packet_.IsDefault()) {
    _impl_.output_side_packet_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:mediapipe.PacketFactoryConfig.output_side_packet)
}

// optional string external_output = 1002;
inline bool PacketFactoryConfig::has_external_output() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void PacketFactoryConfig::clear_external_output() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.external_output_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& PacketFactoryConfig::external_output() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mediapipe.PacketFactoryConfig.external_output)
  return _internal_external_output();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PacketFactoryConfig::set_external_output(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.external_output_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:mediapipe.PacketFactoryConfig.external_output)
}
inline std::string* PacketFactoryConfig::mutable_external_output() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_external_output();
  // @@protoc_insertion_point(field_mutable:mediapipe.PacketFactoryConfig.external_output)
  return _s;
}
inline const std::string& PacketFactoryConfig::_internal_external_output() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.external_output_.Get();
}
inline void PacketFactoryConfig::_internal_set_external_output(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.external_output_.Set(value, GetArena());
}
inline std::string* PacketFactoryConfig::_internal_mutable_external_output() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.external_output_.Mutable( GetArena());
}
inline std::string* PacketFactoryConfig::release_external_output() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mediapipe.PacketFactoryConfig.external_output)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.external_output_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.external_output_.Set("", GetArena());
  }
  return released;
}
inline void PacketFactoryConfig::set_allocated_external_output(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.external_output_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.external_output_.IsDefault()) {
    _impl_.external_output_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:mediapipe.PacketFactoryConfig.external_output)
}

// optional .mediapipe.PacketFactoryOptions options = 3;
inline bool PacketFactoryConfig::has_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.options_ != nullptr);
  return value;
}
inline void PacketFactoryConfig::clear_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.options_ != nullptr) _impl_.options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::mediapipe::PacketFactoryOptions& PacketFactoryConfig::_internal_options() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mediapipe::PacketFactoryOptions* p = _impl_.options_;
  return p != nullptr ? *p : reinterpret_cast<const ::mediapipe::PacketFactoryOptions&>(::mediapipe::_PacketFactoryOptions_default_instance_);
}
inline const ::mediapipe::PacketFactoryOptions& PacketFactoryConfig::options() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mediapipe.PacketFactoryConfig.options)
  return _internal_options();
}
inline void PacketFactoryConfig::unsafe_arena_set_allocated_options(::mediapipe::PacketFactoryOptions* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.options_);
  }
  _impl_.options_ = reinterpret_cast<::mediapipe::PacketFactoryOptions*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mediapipe.PacketFactoryConfig.options)
}
inline ::mediapipe::PacketFactoryOptions* PacketFactoryConfig::release_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::mediapipe::PacketFactoryOptions* released = _impl_.options_;
  _impl_.options_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mediapipe::PacketFactoryOptions* PacketFactoryConfig::unsafe_arena_release_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mediapipe.PacketFactoryConfig.options)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::mediapipe::PacketFactoryOptions* temp = _impl_.options_;
  _impl_.options_ = nullptr;
  return temp;
}
inline ::mediapipe::PacketFactoryOptions* PacketFactoryConfig::_internal_mutable_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.options_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mediapipe::PacketFactoryOptions>(GetArena());
    _impl_.options_ = reinterpret_cast<::mediapipe::PacketFactoryOptions*>(p);
  }
  return _impl_.options_;
}
inline ::mediapipe::PacketFactoryOptions* PacketFactoryConfig::mutable_options() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::mediapipe::PacketFactoryOptions* _msg = _internal_mutable_options();
  // @@protoc_insertion_point(field_mutable:mediapipe.PacketFactoryConfig.options)
  return _msg;
}
inline void PacketFactoryConfig::set_allocated_options(::mediapipe::PacketFactoryOptions* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.options_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.options_ = reinterpret_cast<::mediapipe::PacketFactoryOptions*>(value);
  // @@protoc_insertion_point(field_set_allocated:mediapipe.PacketFactoryConfig.options)
}

// -------------------------------------------------------------------

// PacketManagerConfig

// repeated .mediapipe.PacketFactoryConfig packet = 1;
inline int PacketManagerConfig::_internal_packet_size() const {
  return _internal_packet().size();
}
inline int PacketManagerConfig::packet_size() const {
  return _internal_packet_size();
}
inline void PacketManagerConfig::clear_packet() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packet_.Clear();
}
inline ::mediapipe::PacketFactoryConfig* PacketManagerConfig::mutable_packet(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:mediapipe.PacketManagerConfig.packet)
  return _internal_mutable_packet()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::mediapipe::PacketFactoryConfig>* PacketManagerConfig::mutable_packet()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:mediapipe.PacketManagerConfig.packet)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_packet();
}
inline const ::mediapipe::PacketFactoryConfig& PacketManagerConfig::packet(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mediapipe.PacketManagerConfig.packet)
  return _internal_packet().Get(index);
}
inline ::mediapipe::PacketFactoryConfig* PacketManagerConfig::add_packet() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::mediapipe::PacketFactoryConfig* _add = _internal_mutable_packet()->Add();
  // @@protoc_insertion_point(field_add:mediapipe.PacketManagerConfig.packet)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::mediapipe::PacketFactoryConfig>& PacketManagerConfig::packet() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:mediapipe.PacketManagerConfig.packet)
  return _internal_packet();
}
inline const ::google::protobuf::RepeatedPtrField<::mediapipe::PacketFactoryConfig>&
PacketManagerConfig::_internal_packet() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.packet_;
}
inline ::google::protobuf::RepeatedPtrField<::mediapipe::PacketFactoryConfig>*
PacketManagerConfig::_internal_mutable_packet() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.packet_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace mediapipe


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // mediapipe_2fframework_2fpacket_5ffactory_2eproto_2epb_2eh
