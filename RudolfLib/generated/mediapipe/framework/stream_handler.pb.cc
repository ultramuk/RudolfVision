// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: mediapipe/framework/stream_handler.proto
// Protobuf C++ Version: 5.29.5

#include "mediapipe/framework/stream_handler.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace mediapipe {

inline constexpr OutputStreamHandlerConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        input_side_packet_{},
        output_stream_handler_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        options_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR OutputStreamHandlerConfig::OutputStreamHandlerConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OutputStreamHandlerConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OutputStreamHandlerConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OutputStreamHandlerConfigDefaultTypeInternal() {}
  union {
    OutputStreamHandlerConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OutputStreamHandlerConfigDefaultTypeInternal _OutputStreamHandlerConfig_default_instance_;

inline constexpr InputStreamHandlerConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        input_stream_handler_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        options_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR InputStreamHandlerConfig::InputStreamHandlerConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct InputStreamHandlerConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InputStreamHandlerConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InputStreamHandlerConfigDefaultTypeInternal() {}
  union {
    InputStreamHandlerConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InputStreamHandlerConfigDefaultTypeInternal _InputStreamHandlerConfig_default_instance_;
}  // namespace mediapipe
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_mediapipe_2fframework_2fstream_5fhandler_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_mediapipe_2fframework_2fstream_5fhandler_2eproto = nullptr;
const ::uint32_t
    TableStruct_mediapipe_2fframework_2fstream_5fhandler_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::mediapipe::InputStreamHandlerConfig, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::InputStreamHandlerConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mediapipe::InputStreamHandlerConfig, _impl_.input_stream_handler_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::InputStreamHandlerConfig, _impl_.options_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::mediapipe::OutputStreamHandlerConfig, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::OutputStreamHandlerConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mediapipe::OutputStreamHandlerConfig, _impl_.output_stream_handler_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::OutputStreamHandlerConfig, _impl_.input_side_packet_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::OutputStreamHandlerConfig, _impl_.options_),
        0,
        ~0u,
        1,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::mediapipe::InputStreamHandlerConfig)},
        {12, 23, -1, sizeof(::mediapipe::OutputStreamHandlerConfig)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::mediapipe::_InputStreamHandlerConfig_default_instance_._instance,
    &::mediapipe::_OutputStreamHandlerConfig_default_instance_._instance,
};
const char descriptor_table_protodef_mediapipe_2fframework_2fstream_5fhandler_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n(mediapipe/framework/stream_handler.pro"
    "to\022\tmediapipe\032+mediapipe/framework/media"
    "pipe_options.proto\"\201\001\n\030InputStreamHandle"
    "rConfig\0227\n\024input_stream_handler\030\001 \001(\t:\031D"
    "efaultInputStreamHandler\022,\n\007options\030\003 \001("
    "\0132\033.mediapipe.MediaPipeOptions\"\237\001\n\031Outpu"
    "tStreamHandlerConfig\0229\n\025output_stream_ha"
    "ndler\030\001 \001(\t:\032InOrderOutputStreamHandler\022"
    "\031\n\021input_side_packet\030\002 \003(\t\022,\n\007options\030\003 "
    "\001(\0132\033.mediapipe.MediaPipeOptionsB0\n\032com."
    "google.mediapipe.protoB\022StreamHandlerPro"
    "to"
};
static const ::_pbi::DescriptorTable* const descriptor_table_mediapipe_2fframework_2fstream_5fhandler_2eproto_deps[1] =
    {
        &::descriptor_table_mediapipe_2fframework_2fmediapipe_5foptions_2eproto,
};
static ::absl::once_flag descriptor_table_mediapipe_2fframework_2fstream_5fhandler_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_mediapipe_2fframework_2fstream_5fhandler_2eproto = {
    false,
    false,
    442,
    descriptor_table_protodef_mediapipe_2fframework_2fstream_5fhandler_2eproto,
    "mediapipe/framework/stream_handler.proto",
    &descriptor_table_mediapipe_2fframework_2fstream_5fhandler_2eproto_once,
    descriptor_table_mediapipe_2fframework_2fstream_5fhandler_2eproto_deps,
    1,
    2,
    schemas,
    file_default_instances,
    TableStruct_mediapipe_2fframework_2fstream_5fhandler_2eproto::offsets,
    file_level_enum_descriptors_mediapipe_2fframework_2fstream_5fhandler_2eproto,
    file_level_service_descriptors_mediapipe_2fframework_2fstream_5fhandler_2eproto,
};
namespace mediapipe {
// ===================================================================

class InputStreamHandlerConfig::_Internal {
 public:
  using HasBits =
      decltype(std::declval<InputStreamHandlerConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(InputStreamHandlerConfig, _impl_._has_bits_);
};

/*static*/ const ::_pbi::LazyString InputStreamHandlerConfig::Impl_::_i_give_permission_to_break_this_code_default_input_stream_handler_{
    {{"DefaultInputStreamHandler", 25}},
    {nullptr},
};
void InputStreamHandlerConfig::clear_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.options_ != nullptr) _impl_.options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
InputStreamHandlerConfig::InputStreamHandlerConfig(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mediapipe.InputStreamHandlerConfig)
}
inline PROTOBUF_NDEBUG_INLINE InputStreamHandlerConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mediapipe::InputStreamHandlerConfig& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        input_stream_handler_(arena, from.input_stream_handler_, _i_give_permission_to_break_this_code_default_input_stream_handler_) {}

InputStreamHandlerConfig::InputStreamHandlerConfig(
    ::google::protobuf::Arena* arena,
    const InputStreamHandlerConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  InputStreamHandlerConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.options_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::mediapipe::MediaPipeOptions>(
                              arena, *from._impl_.options_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mediapipe.InputStreamHandlerConfig)
}
inline PROTOBUF_NDEBUG_INLINE InputStreamHandlerConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        input_stream_handler_(arena, Impl_::_i_give_permission_to_break_this_code_default_input_stream_handler_) {}

inline void InputStreamHandlerConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.options_ = {};
}
InputStreamHandlerConfig::~InputStreamHandlerConfig() {
  // @@protoc_insertion_point(destructor:mediapipe.InputStreamHandlerConfig)
  SharedDtor(*this);
}
inline void InputStreamHandlerConfig::SharedDtor(MessageLite& self) {
  InputStreamHandlerConfig& this_ = static_cast<InputStreamHandlerConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.input_stream_handler_.Destroy();
  delete this_._impl_.options_;
  this_._impl_.~Impl_();
}

inline void* InputStreamHandlerConfig::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) InputStreamHandlerConfig(arena);
}
constexpr auto InputStreamHandlerConfig::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(InputStreamHandlerConfig),
                                            alignof(InputStreamHandlerConfig));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull InputStreamHandlerConfig::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_InputStreamHandlerConfig_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        InputStreamHandlerConfig::IsInitializedImpl,
        &InputStreamHandlerConfig::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<InputStreamHandlerConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &InputStreamHandlerConfig::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<InputStreamHandlerConfig>(), &InputStreamHandlerConfig::ByteSizeLong,
            &InputStreamHandlerConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(InputStreamHandlerConfig, _impl_._cached_size_),
        false,
    },
    &InputStreamHandlerConfig::kDescriptorMethods,
    &descriptor_table_mediapipe_2fframework_2fstream_5fhandler_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* InputStreamHandlerConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 2, 1, 63, 2> InputStreamHandlerConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(InputStreamHandlerConfig, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967290,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mediapipe::InputStreamHandlerConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string input_stream_handler = 1 [default = "DefaultInputStreamHandler"];
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(InputStreamHandlerConfig, _impl_.input_stream_handler_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional .mediapipe.MediaPipeOptions options = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(InputStreamHandlerConfig, _impl_.options_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string input_stream_handler = 1 [default = "DefaultInputStreamHandler"];
    {PROTOBUF_FIELD_OFFSET(InputStreamHandlerConfig, _impl_.input_stream_handler_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional .mediapipe.MediaPipeOptions options = 3;
    {PROTOBUF_FIELD_OFFSET(InputStreamHandlerConfig, _impl_.options_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mediapipe::MediaPipeOptions>()},
  }}, {{
    "\42\24\0\0\0\0\0\0"
    "mediapipe.InputStreamHandlerConfig"
    "input_stream_handler"
  }},
};

PROTOBUF_NOINLINE void InputStreamHandlerConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:mediapipe.InputStreamHandlerConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.input_stream_handler_.ClearToDefault(::mediapipe::InputStreamHandlerConfig::Impl_::_i_give_permission_to_break_this_code_default_input_stream_handler_, GetArena());
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.options_ != nullptr);
      _impl_.options_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* InputStreamHandlerConfig::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const InputStreamHandlerConfig& this_ = static_cast<const InputStreamHandlerConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* InputStreamHandlerConfig::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const InputStreamHandlerConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mediapipe.InputStreamHandlerConfig)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional string input_stream_handler = 1 [default = "DefaultInputStreamHandler"];
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_input_stream_handler();
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "mediapipe.InputStreamHandlerConfig.input_stream_handler");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // optional .mediapipe.MediaPipeOptions options = 3;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.options_, this_._impl_.options_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mediapipe.InputStreamHandlerConfig)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t InputStreamHandlerConfig::ByteSizeLong(const MessageLite& base) {
          const InputStreamHandlerConfig& this_ = static_cast<const InputStreamHandlerConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t InputStreamHandlerConfig::ByteSizeLong() const {
          const InputStreamHandlerConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mediapipe.InputStreamHandlerConfig)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // optional string input_stream_handler = 1 [default = "DefaultInputStreamHandler"];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_input_stream_handler());
            }
            // optional .mediapipe.MediaPipeOptions options = 3;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.options_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void InputStreamHandlerConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<InputStreamHandlerConfig*>(&to_msg);
  auto& from = static_cast<const InputStreamHandlerConfig&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mediapipe.InputStreamHandlerConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_input_stream_handler(from._internal_input_stream_handler());
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.options_ != nullptr);
      if (_this->_impl_.options_ == nullptr) {
        _this->_impl_.options_ =
            ::google::protobuf::Message::CopyConstruct<::mediapipe::MediaPipeOptions>(arena, *from._impl_.options_);
      } else {
        _this->_impl_.options_->MergeFrom(*from._impl_.options_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InputStreamHandlerConfig::CopyFrom(const InputStreamHandlerConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mediapipe.InputStreamHandlerConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool InputStreamHandlerConfig::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const InputStreamHandlerConfig&>(msg);
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._impl_.options_->IsInitialized()) return false;
  }
  return true;
}

void InputStreamHandlerConfig::InternalSwap(InputStreamHandlerConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.input_stream_handler_, &other->_impl_.input_stream_handler_, arena);
  swap(_impl_.options_, other->_impl_.options_);
}

::google::protobuf::Metadata InputStreamHandlerConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class OutputStreamHandlerConfig::_Internal {
 public:
  using HasBits =
      decltype(std::declval<OutputStreamHandlerConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(OutputStreamHandlerConfig, _impl_._has_bits_);
};

/*static*/ const ::_pbi::LazyString OutputStreamHandlerConfig::Impl_::_i_give_permission_to_break_this_code_default_output_stream_handler_{
    {{"InOrderOutputStreamHandler", 26}},
    {nullptr},
};
void OutputStreamHandlerConfig::clear_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.options_ != nullptr) _impl_.options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
OutputStreamHandlerConfig::OutputStreamHandlerConfig(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mediapipe.OutputStreamHandlerConfig)
}
inline PROTOBUF_NDEBUG_INLINE OutputStreamHandlerConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mediapipe::OutputStreamHandlerConfig& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        input_side_packet_{visibility, arena, from.input_side_packet_},
        output_stream_handler_(arena, from.output_stream_handler_, _i_give_permission_to_break_this_code_default_output_stream_handler_) {}

OutputStreamHandlerConfig::OutputStreamHandlerConfig(
    ::google::protobuf::Arena* arena,
    const OutputStreamHandlerConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  OutputStreamHandlerConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.options_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::mediapipe::MediaPipeOptions>(
                              arena, *from._impl_.options_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mediapipe.OutputStreamHandlerConfig)
}
inline PROTOBUF_NDEBUG_INLINE OutputStreamHandlerConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        input_side_packet_{visibility, arena},
        output_stream_handler_(arena, Impl_::_i_give_permission_to_break_this_code_default_output_stream_handler_) {}

inline void OutputStreamHandlerConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.options_ = {};
}
OutputStreamHandlerConfig::~OutputStreamHandlerConfig() {
  // @@protoc_insertion_point(destructor:mediapipe.OutputStreamHandlerConfig)
  SharedDtor(*this);
}
inline void OutputStreamHandlerConfig::SharedDtor(MessageLite& self) {
  OutputStreamHandlerConfig& this_ = static_cast<OutputStreamHandlerConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.output_stream_handler_.Destroy();
  delete this_._impl_.options_;
  this_._impl_.~Impl_();
}

inline void* OutputStreamHandlerConfig::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) OutputStreamHandlerConfig(arena);
}
constexpr auto OutputStreamHandlerConfig::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(OutputStreamHandlerConfig, _impl_.input_side_packet_) +
          decltype(OutputStreamHandlerConfig::_impl_.input_side_packet_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(OutputStreamHandlerConfig), alignof(OutputStreamHandlerConfig), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&OutputStreamHandlerConfig::PlacementNew_,
                                 sizeof(OutputStreamHandlerConfig),
                                 alignof(OutputStreamHandlerConfig));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull OutputStreamHandlerConfig::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_OutputStreamHandlerConfig_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        OutputStreamHandlerConfig::IsInitializedImpl,
        &OutputStreamHandlerConfig::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<OutputStreamHandlerConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &OutputStreamHandlerConfig::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<OutputStreamHandlerConfig>(), &OutputStreamHandlerConfig::ByteSizeLong,
            &OutputStreamHandlerConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(OutputStreamHandlerConfig, _impl_._cached_size_),
        false,
    },
    &OutputStreamHandlerConfig::kDescriptorMethods,
    &descriptor_table_mediapipe_2fframework_2fstream_5fhandler_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* OutputStreamHandlerConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 82, 2> OutputStreamHandlerConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OutputStreamHandlerConfig, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mediapipe::OutputStreamHandlerConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string output_stream_handler = 1 [default = "InOrderOutputStreamHandler"];
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(OutputStreamHandlerConfig, _impl_.output_stream_handler_)}},
    // repeated string input_side_packet = 2;
    {::_pbi::TcParser::FastSR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(OutputStreamHandlerConfig, _impl_.input_side_packet_)}},
    // optional .mediapipe.MediaPipeOptions options = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(OutputStreamHandlerConfig, _impl_.options_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string output_stream_handler = 1 [default = "InOrderOutputStreamHandler"];
    {PROTOBUF_FIELD_OFFSET(OutputStreamHandlerConfig, _impl_.output_stream_handler_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated string input_side_packet = 2;
    {PROTOBUF_FIELD_OFFSET(OutputStreamHandlerConfig, _impl_.input_side_packet_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
    // optional .mediapipe.MediaPipeOptions options = 3;
    {PROTOBUF_FIELD_OFFSET(OutputStreamHandlerConfig, _impl_.options_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mediapipe::MediaPipeOptions>()},
  }}, {{
    "\43\25\21\0\0\0\0\0"
    "mediapipe.OutputStreamHandlerConfig"
    "output_stream_handler"
    "input_side_packet"
  }},
};

PROTOBUF_NOINLINE void OutputStreamHandlerConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:mediapipe.OutputStreamHandlerConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.input_side_packet_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.output_stream_handler_.ClearToDefault(::mediapipe::OutputStreamHandlerConfig::Impl_::_i_give_permission_to_break_this_code_default_output_stream_handler_, GetArena());
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.options_ != nullptr);
      _impl_.options_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* OutputStreamHandlerConfig::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const OutputStreamHandlerConfig& this_ = static_cast<const OutputStreamHandlerConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* OutputStreamHandlerConfig::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const OutputStreamHandlerConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mediapipe.OutputStreamHandlerConfig)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional string output_stream_handler = 1 [default = "InOrderOutputStreamHandler"];
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_output_stream_handler();
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "mediapipe.OutputStreamHandlerConfig.output_stream_handler");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // repeated string input_side_packet = 2;
          for (int i = 0, n = this_._internal_input_side_packet_size(); i < n; ++i) {
            const auto& s = this_._internal_input_side_packet().Get(i);
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "mediapipe.OutputStreamHandlerConfig.input_side_packet");
            target = stream->WriteString(2, s, target);
          }

          // optional .mediapipe.MediaPipeOptions options = 3;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.options_, this_._impl_.options_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mediapipe.OutputStreamHandlerConfig)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t OutputStreamHandlerConfig::ByteSizeLong(const MessageLite& base) {
          const OutputStreamHandlerConfig& this_ = static_cast<const OutputStreamHandlerConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t OutputStreamHandlerConfig::ByteSizeLong() const {
          const OutputStreamHandlerConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mediapipe.OutputStreamHandlerConfig)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string input_side_packet = 2;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_input_side_packet().size());
              for (int i = 0, n = this_._internal_input_side_packet().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_input_side_packet().Get(i));
              }
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // optional string output_stream_handler = 1 [default = "InOrderOutputStreamHandler"];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_output_stream_handler());
            }
            // optional .mediapipe.MediaPipeOptions options = 3;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.options_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void OutputStreamHandlerConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OutputStreamHandlerConfig*>(&to_msg);
  auto& from = static_cast<const OutputStreamHandlerConfig&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mediapipe.OutputStreamHandlerConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_input_side_packet()->MergeFrom(from._internal_input_side_packet());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_output_stream_handler(from._internal_output_stream_handler());
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.options_ != nullptr);
      if (_this->_impl_.options_ == nullptr) {
        _this->_impl_.options_ =
            ::google::protobuf::Message::CopyConstruct<::mediapipe::MediaPipeOptions>(arena, *from._impl_.options_);
      } else {
        _this->_impl_.options_->MergeFrom(*from._impl_.options_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OutputStreamHandlerConfig::CopyFrom(const OutputStreamHandlerConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mediapipe.OutputStreamHandlerConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool OutputStreamHandlerConfig::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const OutputStreamHandlerConfig&>(msg);
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._impl_.options_->IsInitialized()) return false;
  }
  return true;
}

void OutputStreamHandlerConfig::InternalSwap(OutputStreamHandlerConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.input_side_packet_.InternalSwap(&other->_impl_.input_side_packet_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.output_stream_handler_, &other->_impl_.output_stream_handler_, arena);
  swap(_impl_.options_, other->_impl_.options_);
}

::google::protobuf::Metadata OutputStreamHandlerConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace mediapipe
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_mediapipe_2fframework_2fstream_5fhandler_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
