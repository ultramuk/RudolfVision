// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: mediapipe/framework/graph_runtime_info.proto
// Protobuf C++ Version: 5.29.5

#ifndef mediapipe_2fframework_2fgraph_5fruntime_5finfo_2eproto_2epb_2eh
#define mediapipe_2fframework_2fgraph_5fruntime_5finfo_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029005
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_mediapipe_2fframework_2fgraph_5fruntime_5finfo_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_mediapipe_2fframework_2fgraph_5fruntime_5finfo_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_mediapipe_2fframework_2fgraph_5fruntime_5finfo_2eproto;
namespace mediapipe {
class CalculatorRuntimeInfo;
struct CalculatorRuntimeInfoDefaultTypeInternal;
extern CalculatorRuntimeInfoDefaultTypeInternal _CalculatorRuntimeInfo_default_instance_;
class GraphRuntimeInfo;
struct GraphRuntimeInfoDefaultTypeInternal;
extern GraphRuntimeInfoDefaultTypeInternal _GraphRuntimeInfo_default_instance_;
class InputStreamRuntimeInfo;
struct InputStreamRuntimeInfoDefaultTypeInternal;
extern InputStreamRuntimeInfoDefaultTypeInternal _InputStreamRuntimeInfo_default_instance_;
class OutputStreamRuntimeInfo;
struct OutputStreamRuntimeInfoDefaultTypeInternal;
extern OutputStreamRuntimeInfoDefaultTypeInternal _OutputStreamRuntimeInfo_default_instance_;
}  // namespace mediapipe
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace mediapipe {

// ===================================================================


// -------------------------------------------------------------------

class OutputStreamRuntimeInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mediapipe.OutputStreamRuntimeInfo) */ {
 public:
  inline OutputStreamRuntimeInfo() : OutputStreamRuntimeInfo(nullptr) {}
  ~OutputStreamRuntimeInfo() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(OutputStreamRuntimeInfo* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(OutputStreamRuntimeInfo));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OutputStreamRuntimeInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline OutputStreamRuntimeInfo(const OutputStreamRuntimeInfo& from) : OutputStreamRuntimeInfo(nullptr, from) {}
  inline OutputStreamRuntimeInfo(OutputStreamRuntimeInfo&& from) noexcept
      : OutputStreamRuntimeInfo(nullptr, std::move(from)) {}
  inline OutputStreamRuntimeInfo& operator=(const OutputStreamRuntimeInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline OutputStreamRuntimeInfo& operator=(OutputStreamRuntimeInfo&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OutputStreamRuntimeInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const OutputStreamRuntimeInfo* internal_default_instance() {
    return reinterpret_cast<const OutputStreamRuntimeInfo*>(
        &_OutputStreamRuntimeInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(OutputStreamRuntimeInfo& a, OutputStreamRuntimeInfo& b) { a.Swap(&b); }
  inline void Swap(OutputStreamRuntimeInfo* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OutputStreamRuntimeInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OutputStreamRuntimeInfo* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<OutputStreamRuntimeInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OutputStreamRuntimeInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OutputStreamRuntimeInfo& from) { OutputStreamRuntimeInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(OutputStreamRuntimeInfo* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mediapipe.OutputStreamRuntimeInfo"; }

 protected:
  explicit OutputStreamRuntimeInfo(::google::protobuf::Arena* arena);
  OutputStreamRuntimeInfo(::google::protobuf::Arena* arena, const OutputStreamRuntimeInfo& from);
  OutputStreamRuntimeInfo(::google::protobuf::Arena* arena, OutputStreamRuntimeInfo&& from) noexcept
      : OutputStreamRuntimeInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStreamNameFieldNumber = 1,
    kMinimumTimestampOrBoundFieldNumber = 3,
    kNumberOfPacketsAddedFieldNumber = 2,
  };
  // string stream_name = 1;
  void clear_stream_name() ;
  const std::string& stream_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_stream_name(Arg_&& arg, Args_... args);
  std::string* mutable_stream_name();
  PROTOBUF_NODISCARD std::string* release_stream_name();
  void set_allocated_stream_name(std::string* value);

  private:
  const std::string& _internal_stream_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_stream_name(
      const std::string& value);
  std::string* _internal_mutable_stream_name();

  public:
  // int64 minimum_timestamp_or_bound = 3;
  void clear_minimum_timestamp_or_bound() ;
  ::int64_t minimum_timestamp_or_bound() const;
  void set_minimum_timestamp_or_bound(::int64_t value);

  private:
  ::int64_t _internal_minimum_timestamp_or_bound() const;
  void _internal_set_minimum_timestamp_or_bound(::int64_t value);

  public:
  // int32 number_of_packets_added = 2;
  void clear_number_of_packets_added() ;
  ::int32_t number_of_packets_added() const;
  void set_number_of_packets_added(::int32_t value);

  private:
  ::int32_t _internal_number_of_packets_added() const;
  void _internal_set_number_of_packets_added(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:mediapipe.OutputStreamRuntimeInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      53, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const OutputStreamRuntimeInfo& from_msg);
    ::google::protobuf::internal::ArenaStringPtr stream_name_;
    ::int64_t minimum_timestamp_or_bound_;
    ::int32_t number_of_packets_added_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_mediapipe_2fframework_2fgraph_5fruntime_5finfo_2eproto;
};
// -------------------------------------------------------------------

class InputStreamRuntimeInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mediapipe.InputStreamRuntimeInfo) */ {
 public:
  inline InputStreamRuntimeInfo() : InputStreamRuntimeInfo(nullptr) {}
  ~InputStreamRuntimeInfo() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(InputStreamRuntimeInfo* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(InputStreamRuntimeInfo));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR InputStreamRuntimeInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline InputStreamRuntimeInfo(const InputStreamRuntimeInfo& from) : InputStreamRuntimeInfo(nullptr, from) {}
  inline InputStreamRuntimeInfo(InputStreamRuntimeInfo&& from) noexcept
      : InputStreamRuntimeInfo(nullptr, std::move(from)) {}
  inline InputStreamRuntimeInfo& operator=(const InputStreamRuntimeInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline InputStreamRuntimeInfo& operator=(InputStreamRuntimeInfo&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InputStreamRuntimeInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const InputStreamRuntimeInfo* internal_default_instance() {
    return reinterpret_cast<const InputStreamRuntimeInfo*>(
        &_InputStreamRuntimeInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(InputStreamRuntimeInfo& a, InputStreamRuntimeInfo& b) { a.Swap(&b); }
  inline void Swap(InputStreamRuntimeInfo* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InputStreamRuntimeInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InputStreamRuntimeInfo* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<InputStreamRuntimeInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InputStreamRuntimeInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const InputStreamRuntimeInfo& from) { InputStreamRuntimeInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(InputStreamRuntimeInfo* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mediapipe.InputStreamRuntimeInfo"; }

 protected:
  explicit InputStreamRuntimeInfo(::google::protobuf::Arena* arena);
  InputStreamRuntimeInfo(::google::protobuf::Arena* arena, const InputStreamRuntimeInfo& from);
  InputStreamRuntimeInfo(::google::protobuf::Arena* arena, InputStreamRuntimeInfo&& from) noexcept
      : InputStreamRuntimeInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStreamNameFieldNumber = 1,
    kQueueSizeFieldNumber = 2,
    kNumberOfPacketsAddedFieldNumber = 3,
    kMinimumTimestampOrBoundFieldNumber = 4,
  };
  // string stream_name = 1;
  void clear_stream_name() ;
  const std::string& stream_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_stream_name(Arg_&& arg, Args_... args);
  std::string* mutable_stream_name();
  PROTOBUF_NODISCARD std::string* release_stream_name();
  void set_allocated_stream_name(std::string* value);

  private:
  const std::string& _internal_stream_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_stream_name(
      const std::string& value);
  std::string* _internal_mutable_stream_name();

  public:
  // int32 queue_size = 2;
  void clear_queue_size() ;
  ::int32_t queue_size() const;
  void set_queue_size(::int32_t value);

  private:
  ::int32_t _internal_queue_size() const;
  void _internal_set_queue_size(::int32_t value);

  public:
  // int32 number_of_packets_added = 3;
  void clear_number_of_packets_added() ;
  ::int32_t number_of_packets_added() const;
  void set_number_of_packets_added(::int32_t value);

  private:
  ::int32_t _internal_number_of_packets_added() const;
  void _internal_set_number_of_packets_added(::int32_t value);

  public:
  // int64 minimum_timestamp_or_bound = 4;
  void clear_minimum_timestamp_or_bound() ;
  ::int64_t minimum_timestamp_or_bound() const;
  void set_minimum_timestamp_or_bound(::int64_t value);

  private:
  ::int64_t _internal_minimum_timestamp_or_bound() const;
  void _internal_set_minimum_timestamp_or_bound(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:mediapipe.InputStreamRuntimeInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      52, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const InputStreamRuntimeInfo& from_msg);
    ::google::protobuf::internal::ArenaStringPtr stream_name_;
    ::int32_t queue_size_;
    ::int32_t number_of_packets_added_;
    ::int64_t minimum_timestamp_or_bound_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_mediapipe_2fframework_2fgraph_5fruntime_5finfo_2eproto;
};
// -------------------------------------------------------------------

class CalculatorRuntimeInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mediapipe.CalculatorRuntimeInfo) */ {
 public:
  inline CalculatorRuntimeInfo() : CalculatorRuntimeInfo(nullptr) {}
  ~CalculatorRuntimeInfo() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CalculatorRuntimeInfo* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CalculatorRuntimeInfo));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CalculatorRuntimeInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline CalculatorRuntimeInfo(const CalculatorRuntimeInfo& from) : CalculatorRuntimeInfo(nullptr, from) {}
  inline CalculatorRuntimeInfo(CalculatorRuntimeInfo&& from) noexcept
      : CalculatorRuntimeInfo(nullptr, std::move(from)) {}
  inline CalculatorRuntimeInfo& operator=(const CalculatorRuntimeInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline CalculatorRuntimeInfo& operator=(CalculatorRuntimeInfo&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CalculatorRuntimeInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const CalculatorRuntimeInfo* internal_default_instance() {
    return reinterpret_cast<const CalculatorRuntimeInfo*>(
        &_CalculatorRuntimeInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(CalculatorRuntimeInfo& a, CalculatorRuntimeInfo& b) { a.Swap(&b); }
  inline void Swap(CalculatorRuntimeInfo* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CalculatorRuntimeInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CalculatorRuntimeInfo* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CalculatorRuntimeInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CalculatorRuntimeInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CalculatorRuntimeInfo& from) { CalculatorRuntimeInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CalculatorRuntimeInfo* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mediapipe.CalculatorRuntimeInfo"; }

 protected:
  explicit CalculatorRuntimeInfo(::google::protobuf::Arena* arena);
  CalculatorRuntimeInfo(::google::protobuf::Arena* arena, const CalculatorRuntimeInfo& from);
  CalculatorRuntimeInfo(::google::protobuf::Arena* arena, CalculatorRuntimeInfo&& from) noexcept
      : CalculatorRuntimeInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInputStreamInfosFieldNumber = 5,
    kOutputStreamInfosFieldNumber = 6,
    kCalculatorNameFieldNumber = 1,
    kLastProcessStartUnixUsFieldNumber = 2,
    kLastProcessFinishUnixUsFieldNumber = 3,
    kTimestampBoundFieldNumber = 4,
  };
  // repeated .mediapipe.InputStreamRuntimeInfo input_stream_infos = 5;
  int input_stream_infos_size() const;
  private:
  int _internal_input_stream_infos_size() const;

  public:
  void clear_input_stream_infos() ;
  ::mediapipe::InputStreamRuntimeInfo* mutable_input_stream_infos(int index);
  ::google::protobuf::RepeatedPtrField<::mediapipe::InputStreamRuntimeInfo>* mutable_input_stream_infos();

  private:
  const ::google::protobuf::RepeatedPtrField<::mediapipe::InputStreamRuntimeInfo>& _internal_input_stream_infos() const;
  ::google::protobuf::RepeatedPtrField<::mediapipe::InputStreamRuntimeInfo>* _internal_mutable_input_stream_infos();
  public:
  const ::mediapipe::InputStreamRuntimeInfo& input_stream_infos(int index) const;
  ::mediapipe::InputStreamRuntimeInfo* add_input_stream_infos();
  const ::google::protobuf::RepeatedPtrField<::mediapipe::InputStreamRuntimeInfo>& input_stream_infos() const;
  // repeated .mediapipe.OutputStreamRuntimeInfo output_stream_infos = 6;
  int output_stream_infos_size() const;
  private:
  int _internal_output_stream_infos_size() const;

  public:
  void clear_output_stream_infos() ;
  ::mediapipe::OutputStreamRuntimeInfo* mutable_output_stream_infos(int index);
  ::google::protobuf::RepeatedPtrField<::mediapipe::OutputStreamRuntimeInfo>* mutable_output_stream_infos();

  private:
  const ::google::protobuf::RepeatedPtrField<::mediapipe::OutputStreamRuntimeInfo>& _internal_output_stream_infos() const;
  ::google::protobuf::RepeatedPtrField<::mediapipe::OutputStreamRuntimeInfo>* _internal_mutable_output_stream_infos();
  public:
  const ::mediapipe::OutputStreamRuntimeInfo& output_stream_infos(int index) const;
  ::mediapipe::OutputStreamRuntimeInfo* add_output_stream_infos();
  const ::google::protobuf::RepeatedPtrField<::mediapipe::OutputStreamRuntimeInfo>& output_stream_infos() const;
  // string calculator_name = 1;
  void clear_calculator_name() ;
  const std::string& calculator_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_calculator_name(Arg_&& arg, Args_... args);
  std::string* mutable_calculator_name();
  PROTOBUF_NODISCARD std::string* release_calculator_name();
  void set_allocated_calculator_name(std::string* value);

  private:
  const std::string& _internal_calculator_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_calculator_name(
      const std::string& value);
  std::string* _internal_mutable_calculator_name();

  public:
  // int64 last_process_start_unix_us = 2;
  void clear_last_process_start_unix_us() ;
  ::int64_t last_process_start_unix_us() const;
  void set_last_process_start_unix_us(::int64_t value);

  private:
  ::int64_t _internal_last_process_start_unix_us() const;
  void _internal_set_last_process_start_unix_us(::int64_t value);

  public:
  // int64 last_process_finish_unix_us = 3;
  void clear_last_process_finish_unix_us() ;
  ::int64_t last_process_finish_unix_us() const;
  void set_last_process_finish_unix_us(::int64_t value);

  private:
  ::int64_t _internal_last_process_finish_unix_us() const;
  void _internal_set_last_process_finish_unix_us(::int64_t value);

  public:
  // int64 timestamp_bound = 4;
  void clear_timestamp_bound() ;
  ::int64_t timestamp_bound() const;
  void set_timestamp_bound(::int64_t value);

  private:
  ::int64_t _internal_timestamp_bound() const;
  void _internal_set_timestamp_bound(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:mediapipe.CalculatorRuntimeInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 2,
      55, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CalculatorRuntimeInfo& from_msg);
    ::google::protobuf::RepeatedPtrField< ::mediapipe::InputStreamRuntimeInfo > input_stream_infos_;
    ::google::protobuf::RepeatedPtrField< ::mediapipe::OutputStreamRuntimeInfo > output_stream_infos_;
    ::google::protobuf::internal::ArenaStringPtr calculator_name_;
    ::int64_t last_process_start_unix_us_;
    ::int64_t last_process_finish_unix_us_;
    ::int64_t timestamp_bound_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_mediapipe_2fframework_2fgraph_5fruntime_5finfo_2eproto;
};
// -------------------------------------------------------------------

class GraphRuntimeInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mediapipe.GraphRuntimeInfo) */ {
 public:
  inline GraphRuntimeInfo() : GraphRuntimeInfo(nullptr) {}
  ~GraphRuntimeInfo() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GraphRuntimeInfo* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GraphRuntimeInfo));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GraphRuntimeInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline GraphRuntimeInfo(const GraphRuntimeInfo& from) : GraphRuntimeInfo(nullptr, from) {}
  inline GraphRuntimeInfo(GraphRuntimeInfo&& from) noexcept
      : GraphRuntimeInfo(nullptr, std::move(from)) {}
  inline GraphRuntimeInfo& operator=(const GraphRuntimeInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline GraphRuntimeInfo& operator=(GraphRuntimeInfo&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GraphRuntimeInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const GraphRuntimeInfo* internal_default_instance() {
    return reinterpret_cast<const GraphRuntimeInfo*>(
        &_GraphRuntimeInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(GraphRuntimeInfo& a, GraphRuntimeInfo& b) { a.Swap(&b); }
  inline void Swap(GraphRuntimeInfo* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GraphRuntimeInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GraphRuntimeInfo* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GraphRuntimeInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GraphRuntimeInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GraphRuntimeInfo& from) { GraphRuntimeInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GraphRuntimeInfo* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mediapipe.GraphRuntimeInfo"; }

 protected:
  explicit GraphRuntimeInfo(::google::protobuf::Arena* arena);
  GraphRuntimeInfo(::google::protobuf::Arena* arena, const GraphRuntimeInfo& from);
  GraphRuntimeInfo(::google::protobuf::Arena* arena, GraphRuntimeInfo&& from) noexcept
      : GraphRuntimeInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCalculatorInfosFieldNumber = 2,
    kCaptureTimeUnixUsFieldNumber = 1,
  };
  // repeated .mediapipe.CalculatorRuntimeInfo calculator_infos = 2;
  int calculator_infos_size() const;
  private:
  int _internal_calculator_infos_size() const;

  public:
  void clear_calculator_infos() ;
  ::mediapipe::CalculatorRuntimeInfo* mutable_calculator_infos(int index);
  ::google::protobuf::RepeatedPtrField<::mediapipe::CalculatorRuntimeInfo>* mutable_calculator_infos();

  private:
  const ::google::protobuf::RepeatedPtrField<::mediapipe::CalculatorRuntimeInfo>& _internal_calculator_infos() const;
  ::google::protobuf::RepeatedPtrField<::mediapipe::CalculatorRuntimeInfo>* _internal_mutable_calculator_infos();
  public:
  const ::mediapipe::CalculatorRuntimeInfo& calculator_infos(int index) const;
  ::mediapipe::CalculatorRuntimeInfo* add_calculator_infos();
  const ::google::protobuf::RepeatedPtrField<::mediapipe::CalculatorRuntimeInfo>& calculator_infos() const;
  // int64 capture_time_unix_us = 1;
  void clear_capture_time_unix_us() ;
  ::int64_t capture_time_unix_us() const;
  void set_capture_time_unix_us(::int64_t value);

  private:
  ::int64_t _internal_capture_time_unix_us() const;
  void _internal_set_capture_time_unix_us(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:mediapipe.GraphRuntimeInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GraphRuntimeInfo& from_msg);
    ::google::protobuf::RepeatedPtrField< ::mediapipe::CalculatorRuntimeInfo > calculator_infos_;
    ::int64_t capture_time_unix_us_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_mediapipe_2fframework_2fgraph_5fruntime_5finfo_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// InputStreamRuntimeInfo

// string stream_name = 1;
inline void InputStreamRuntimeInfo::clear_stream_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stream_name_.ClearToEmpty();
}
inline const std::string& InputStreamRuntimeInfo::stream_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mediapipe.InputStreamRuntimeInfo.stream_name)
  return _internal_stream_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InputStreamRuntimeInfo::set_stream_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stream_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:mediapipe.InputStreamRuntimeInfo.stream_name)
}
inline std::string* InputStreamRuntimeInfo::mutable_stream_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_stream_name();
  // @@protoc_insertion_point(field_mutable:mediapipe.InputStreamRuntimeInfo.stream_name)
  return _s;
}
inline const std::string& InputStreamRuntimeInfo::_internal_stream_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.stream_name_.Get();
}
inline void InputStreamRuntimeInfo::_internal_set_stream_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stream_name_.Set(value, GetArena());
}
inline std::string* InputStreamRuntimeInfo::_internal_mutable_stream_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.stream_name_.Mutable( GetArena());
}
inline std::string* InputStreamRuntimeInfo::release_stream_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mediapipe.InputStreamRuntimeInfo.stream_name)
  return _impl_.stream_name_.Release();
}
inline void InputStreamRuntimeInfo::set_allocated_stream_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stream_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.stream_name_.IsDefault()) {
    _impl_.stream_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:mediapipe.InputStreamRuntimeInfo.stream_name)
}

// int32 queue_size = 2;
inline void InputStreamRuntimeInfo::clear_queue_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.queue_size_ = 0;
}
inline ::int32_t InputStreamRuntimeInfo::queue_size() const {
  // @@protoc_insertion_point(field_get:mediapipe.InputStreamRuntimeInfo.queue_size)
  return _internal_queue_size();
}
inline void InputStreamRuntimeInfo::set_queue_size(::int32_t value) {
  _internal_set_queue_size(value);
  // @@protoc_insertion_point(field_set:mediapipe.InputStreamRuntimeInfo.queue_size)
}
inline ::int32_t InputStreamRuntimeInfo::_internal_queue_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.queue_size_;
}
inline void InputStreamRuntimeInfo::_internal_set_queue_size(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.queue_size_ = value;
}

// int32 number_of_packets_added = 3;
inline void InputStreamRuntimeInfo::clear_number_of_packets_added() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.number_of_packets_added_ = 0;
}
inline ::int32_t InputStreamRuntimeInfo::number_of_packets_added() const {
  // @@protoc_insertion_point(field_get:mediapipe.InputStreamRuntimeInfo.number_of_packets_added)
  return _internal_number_of_packets_added();
}
inline void InputStreamRuntimeInfo::set_number_of_packets_added(::int32_t value) {
  _internal_set_number_of_packets_added(value);
  // @@protoc_insertion_point(field_set:mediapipe.InputStreamRuntimeInfo.number_of_packets_added)
}
inline ::int32_t InputStreamRuntimeInfo::_internal_number_of_packets_added() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.number_of_packets_added_;
}
inline void InputStreamRuntimeInfo::_internal_set_number_of_packets_added(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.number_of_packets_added_ = value;
}

// int64 minimum_timestamp_or_bound = 4;
inline void InputStreamRuntimeInfo::clear_minimum_timestamp_or_bound() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.minimum_timestamp_or_bound_ = ::int64_t{0};
}
inline ::int64_t InputStreamRuntimeInfo::minimum_timestamp_or_bound() const {
  // @@protoc_insertion_point(field_get:mediapipe.InputStreamRuntimeInfo.minimum_timestamp_or_bound)
  return _internal_minimum_timestamp_or_bound();
}
inline void InputStreamRuntimeInfo::set_minimum_timestamp_or_bound(::int64_t value) {
  _internal_set_minimum_timestamp_or_bound(value);
  // @@protoc_insertion_point(field_set:mediapipe.InputStreamRuntimeInfo.minimum_timestamp_or_bound)
}
inline ::int64_t InputStreamRuntimeInfo::_internal_minimum_timestamp_or_bound() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.minimum_timestamp_or_bound_;
}
inline void InputStreamRuntimeInfo::_internal_set_minimum_timestamp_or_bound(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.minimum_timestamp_or_bound_ = value;
}

// -------------------------------------------------------------------

// OutputStreamRuntimeInfo

// string stream_name = 1;
inline void OutputStreamRuntimeInfo::clear_stream_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stream_name_.ClearToEmpty();
}
inline const std::string& OutputStreamRuntimeInfo::stream_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mediapipe.OutputStreamRuntimeInfo.stream_name)
  return _internal_stream_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OutputStreamRuntimeInfo::set_stream_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stream_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:mediapipe.OutputStreamRuntimeInfo.stream_name)
}
inline std::string* OutputStreamRuntimeInfo::mutable_stream_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_stream_name();
  // @@protoc_insertion_point(field_mutable:mediapipe.OutputStreamRuntimeInfo.stream_name)
  return _s;
}
inline const std::string& OutputStreamRuntimeInfo::_internal_stream_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.stream_name_.Get();
}
inline void OutputStreamRuntimeInfo::_internal_set_stream_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stream_name_.Set(value, GetArena());
}
inline std::string* OutputStreamRuntimeInfo::_internal_mutable_stream_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.stream_name_.Mutable( GetArena());
}
inline std::string* OutputStreamRuntimeInfo::release_stream_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mediapipe.OutputStreamRuntimeInfo.stream_name)
  return _impl_.stream_name_.Release();
}
inline void OutputStreamRuntimeInfo::set_allocated_stream_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stream_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.stream_name_.IsDefault()) {
    _impl_.stream_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:mediapipe.OutputStreamRuntimeInfo.stream_name)
}

// int32 number_of_packets_added = 2;
inline void OutputStreamRuntimeInfo::clear_number_of_packets_added() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.number_of_packets_added_ = 0;
}
inline ::int32_t OutputStreamRuntimeInfo::number_of_packets_added() const {
  // @@protoc_insertion_point(field_get:mediapipe.OutputStreamRuntimeInfo.number_of_packets_added)
  return _internal_number_of_packets_added();
}
inline void OutputStreamRuntimeInfo::set_number_of_packets_added(::int32_t value) {
  _internal_set_number_of_packets_added(value);
  // @@protoc_insertion_point(field_set:mediapipe.OutputStreamRuntimeInfo.number_of_packets_added)
}
inline ::int32_t OutputStreamRuntimeInfo::_internal_number_of_packets_added() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.number_of_packets_added_;
}
inline void OutputStreamRuntimeInfo::_internal_set_number_of_packets_added(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.number_of_packets_added_ = value;
}

// int64 minimum_timestamp_or_bound = 3;
inline void OutputStreamRuntimeInfo::clear_minimum_timestamp_or_bound() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.minimum_timestamp_or_bound_ = ::int64_t{0};
}
inline ::int64_t OutputStreamRuntimeInfo::minimum_timestamp_or_bound() const {
  // @@protoc_insertion_point(field_get:mediapipe.OutputStreamRuntimeInfo.minimum_timestamp_or_bound)
  return _internal_minimum_timestamp_or_bound();
}
inline void OutputStreamRuntimeInfo::set_minimum_timestamp_or_bound(::int64_t value) {
  _internal_set_minimum_timestamp_or_bound(value);
  // @@protoc_insertion_point(field_set:mediapipe.OutputStreamRuntimeInfo.minimum_timestamp_or_bound)
}
inline ::int64_t OutputStreamRuntimeInfo::_internal_minimum_timestamp_or_bound() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.minimum_timestamp_or_bound_;
}
inline void OutputStreamRuntimeInfo::_internal_set_minimum_timestamp_or_bound(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.minimum_timestamp_or_bound_ = value;
}

// -------------------------------------------------------------------

// CalculatorRuntimeInfo

// string calculator_name = 1;
inline void CalculatorRuntimeInfo::clear_calculator_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.calculator_name_.ClearToEmpty();
}
inline const std::string& CalculatorRuntimeInfo::calculator_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mediapipe.CalculatorRuntimeInfo.calculator_name)
  return _internal_calculator_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CalculatorRuntimeInfo::set_calculator_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.calculator_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:mediapipe.CalculatorRuntimeInfo.calculator_name)
}
inline std::string* CalculatorRuntimeInfo::mutable_calculator_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_calculator_name();
  // @@protoc_insertion_point(field_mutable:mediapipe.CalculatorRuntimeInfo.calculator_name)
  return _s;
}
inline const std::string& CalculatorRuntimeInfo::_internal_calculator_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.calculator_name_.Get();
}
inline void CalculatorRuntimeInfo::_internal_set_calculator_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.calculator_name_.Set(value, GetArena());
}
inline std::string* CalculatorRuntimeInfo::_internal_mutable_calculator_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.calculator_name_.Mutable( GetArena());
}
inline std::string* CalculatorRuntimeInfo::release_calculator_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:mediapipe.CalculatorRuntimeInfo.calculator_name)
  return _impl_.calculator_name_.Release();
}
inline void CalculatorRuntimeInfo::set_allocated_calculator_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.calculator_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.calculator_name_.IsDefault()) {
    _impl_.calculator_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:mediapipe.CalculatorRuntimeInfo.calculator_name)
}

// int64 last_process_start_unix_us = 2;
inline void CalculatorRuntimeInfo::clear_last_process_start_unix_us() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_process_start_unix_us_ = ::int64_t{0};
}
inline ::int64_t CalculatorRuntimeInfo::last_process_start_unix_us() const {
  // @@protoc_insertion_point(field_get:mediapipe.CalculatorRuntimeInfo.last_process_start_unix_us)
  return _internal_last_process_start_unix_us();
}
inline void CalculatorRuntimeInfo::set_last_process_start_unix_us(::int64_t value) {
  _internal_set_last_process_start_unix_us(value);
  // @@protoc_insertion_point(field_set:mediapipe.CalculatorRuntimeInfo.last_process_start_unix_us)
}
inline ::int64_t CalculatorRuntimeInfo::_internal_last_process_start_unix_us() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.last_process_start_unix_us_;
}
inline void CalculatorRuntimeInfo::_internal_set_last_process_start_unix_us(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_process_start_unix_us_ = value;
}

// int64 last_process_finish_unix_us = 3;
inline void CalculatorRuntimeInfo::clear_last_process_finish_unix_us() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_process_finish_unix_us_ = ::int64_t{0};
}
inline ::int64_t CalculatorRuntimeInfo::last_process_finish_unix_us() const {
  // @@protoc_insertion_point(field_get:mediapipe.CalculatorRuntimeInfo.last_process_finish_unix_us)
  return _internal_last_process_finish_unix_us();
}
inline void CalculatorRuntimeInfo::set_last_process_finish_unix_us(::int64_t value) {
  _internal_set_last_process_finish_unix_us(value);
  // @@protoc_insertion_point(field_set:mediapipe.CalculatorRuntimeInfo.last_process_finish_unix_us)
}
inline ::int64_t CalculatorRuntimeInfo::_internal_last_process_finish_unix_us() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.last_process_finish_unix_us_;
}
inline void CalculatorRuntimeInfo::_internal_set_last_process_finish_unix_us(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_process_finish_unix_us_ = value;
}

// int64 timestamp_bound = 4;
inline void CalculatorRuntimeInfo::clear_timestamp_bound() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_bound_ = ::int64_t{0};
}
inline ::int64_t CalculatorRuntimeInfo::timestamp_bound() const {
  // @@protoc_insertion_point(field_get:mediapipe.CalculatorRuntimeInfo.timestamp_bound)
  return _internal_timestamp_bound();
}
inline void CalculatorRuntimeInfo::set_timestamp_bound(::int64_t value) {
  _internal_set_timestamp_bound(value);
  // @@protoc_insertion_point(field_set:mediapipe.CalculatorRuntimeInfo.timestamp_bound)
}
inline ::int64_t CalculatorRuntimeInfo::_internal_timestamp_bound() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_bound_;
}
inline void CalculatorRuntimeInfo::_internal_set_timestamp_bound(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_bound_ = value;
}

// repeated .mediapipe.InputStreamRuntimeInfo input_stream_infos = 5;
inline int CalculatorRuntimeInfo::_internal_input_stream_infos_size() const {
  return _internal_input_stream_infos().size();
}
inline int CalculatorRuntimeInfo::input_stream_infos_size() const {
  return _internal_input_stream_infos_size();
}
inline void CalculatorRuntimeInfo::clear_input_stream_infos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.input_stream_infos_.Clear();
}
inline ::mediapipe::InputStreamRuntimeInfo* CalculatorRuntimeInfo::mutable_input_stream_infos(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:mediapipe.CalculatorRuntimeInfo.input_stream_infos)
  return _internal_mutable_input_stream_infos()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::mediapipe::InputStreamRuntimeInfo>* CalculatorRuntimeInfo::mutable_input_stream_infos()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:mediapipe.CalculatorRuntimeInfo.input_stream_infos)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_input_stream_infos();
}
inline const ::mediapipe::InputStreamRuntimeInfo& CalculatorRuntimeInfo::input_stream_infos(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mediapipe.CalculatorRuntimeInfo.input_stream_infos)
  return _internal_input_stream_infos().Get(index);
}
inline ::mediapipe::InputStreamRuntimeInfo* CalculatorRuntimeInfo::add_input_stream_infos() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::mediapipe::InputStreamRuntimeInfo* _add = _internal_mutable_input_stream_infos()->Add();
  // @@protoc_insertion_point(field_add:mediapipe.CalculatorRuntimeInfo.input_stream_infos)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::mediapipe::InputStreamRuntimeInfo>& CalculatorRuntimeInfo::input_stream_infos() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:mediapipe.CalculatorRuntimeInfo.input_stream_infos)
  return _internal_input_stream_infos();
}
inline const ::google::protobuf::RepeatedPtrField<::mediapipe::InputStreamRuntimeInfo>&
CalculatorRuntimeInfo::_internal_input_stream_infos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.input_stream_infos_;
}
inline ::google::protobuf::RepeatedPtrField<::mediapipe::InputStreamRuntimeInfo>*
CalculatorRuntimeInfo::_internal_mutable_input_stream_infos() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.input_stream_infos_;
}

// repeated .mediapipe.OutputStreamRuntimeInfo output_stream_infos = 6;
inline int CalculatorRuntimeInfo::_internal_output_stream_infos_size() const {
  return _internal_output_stream_infos().size();
}
inline int CalculatorRuntimeInfo::output_stream_infos_size() const {
  return _internal_output_stream_infos_size();
}
inline void CalculatorRuntimeInfo::clear_output_stream_infos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.output_stream_infos_.Clear();
}
inline ::mediapipe::OutputStreamRuntimeInfo* CalculatorRuntimeInfo::mutable_output_stream_infos(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:mediapipe.CalculatorRuntimeInfo.output_stream_infos)
  return _internal_mutable_output_stream_infos()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::mediapipe::OutputStreamRuntimeInfo>* CalculatorRuntimeInfo::mutable_output_stream_infos()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:mediapipe.CalculatorRuntimeInfo.output_stream_infos)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_output_stream_infos();
}
inline const ::mediapipe::OutputStreamRuntimeInfo& CalculatorRuntimeInfo::output_stream_infos(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mediapipe.CalculatorRuntimeInfo.output_stream_infos)
  return _internal_output_stream_infos().Get(index);
}
inline ::mediapipe::OutputStreamRuntimeInfo* CalculatorRuntimeInfo::add_output_stream_infos() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::mediapipe::OutputStreamRuntimeInfo* _add = _internal_mutable_output_stream_infos()->Add();
  // @@protoc_insertion_point(field_add:mediapipe.CalculatorRuntimeInfo.output_stream_infos)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::mediapipe::OutputStreamRuntimeInfo>& CalculatorRuntimeInfo::output_stream_infos() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:mediapipe.CalculatorRuntimeInfo.output_stream_infos)
  return _internal_output_stream_infos();
}
inline const ::google::protobuf::RepeatedPtrField<::mediapipe::OutputStreamRuntimeInfo>&
CalculatorRuntimeInfo::_internal_output_stream_infos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.output_stream_infos_;
}
inline ::google::protobuf::RepeatedPtrField<::mediapipe::OutputStreamRuntimeInfo>*
CalculatorRuntimeInfo::_internal_mutable_output_stream_infos() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.output_stream_infos_;
}

// -------------------------------------------------------------------

// GraphRuntimeInfo

// int64 capture_time_unix_us = 1;
inline void GraphRuntimeInfo::clear_capture_time_unix_us() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.capture_time_unix_us_ = ::int64_t{0};
}
inline ::int64_t GraphRuntimeInfo::capture_time_unix_us() const {
  // @@protoc_insertion_point(field_get:mediapipe.GraphRuntimeInfo.capture_time_unix_us)
  return _internal_capture_time_unix_us();
}
inline void GraphRuntimeInfo::set_capture_time_unix_us(::int64_t value) {
  _internal_set_capture_time_unix_us(value);
  // @@protoc_insertion_point(field_set:mediapipe.GraphRuntimeInfo.capture_time_unix_us)
}
inline ::int64_t GraphRuntimeInfo::_internal_capture_time_unix_us() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.capture_time_unix_us_;
}
inline void GraphRuntimeInfo::_internal_set_capture_time_unix_us(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.capture_time_unix_us_ = value;
}

// repeated .mediapipe.CalculatorRuntimeInfo calculator_infos = 2;
inline int GraphRuntimeInfo::_internal_calculator_infos_size() const {
  return _internal_calculator_infos().size();
}
inline int GraphRuntimeInfo::calculator_infos_size() const {
  return _internal_calculator_infos_size();
}
inline void GraphRuntimeInfo::clear_calculator_infos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.calculator_infos_.Clear();
}
inline ::mediapipe::CalculatorRuntimeInfo* GraphRuntimeInfo::mutable_calculator_infos(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:mediapipe.GraphRuntimeInfo.calculator_infos)
  return _internal_mutable_calculator_infos()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::mediapipe::CalculatorRuntimeInfo>* GraphRuntimeInfo::mutable_calculator_infos()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:mediapipe.GraphRuntimeInfo.calculator_infos)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_calculator_infos();
}
inline const ::mediapipe::CalculatorRuntimeInfo& GraphRuntimeInfo::calculator_infos(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mediapipe.GraphRuntimeInfo.calculator_infos)
  return _internal_calculator_infos().Get(index);
}
inline ::mediapipe::CalculatorRuntimeInfo* GraphRuntimeInfo::add_calculator_infos() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::mediapipe::CalculatorRuntimeInfo* _add = _internal_mutable_calculator_infos()->Add();
  // @@protoc_insertion_point(field_add:mediapipe.GraphRuntimeInfo.calculator_infos)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::mediapipe::CalculatorRuntimeInfo>& GraphRuntimeInfo::calculator_infos() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:mediapipe.GraphRuntimeInfo.calculator_infos)
  return _internal_calculator_infos();
}
inline const ::google::protobuf::RepeatedPtrField<::mediapipe::CalculatorRuntimeInfo>&
GraphRuntimeInfo::_internal_calculator_infos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.calculator_infos_;
}
inline ::google::protobuf::RepeatedPtrField<::mediapipe::CalculatorRuntimeInfo>*
GraphRuntimeInfo::_internal_mutable_calculator_infos() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.calculator_infos_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace mediapipe


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // mediapipe_2fframework_2fgraph_5fruntime_5finfo_2eproto_2epb_2eh
